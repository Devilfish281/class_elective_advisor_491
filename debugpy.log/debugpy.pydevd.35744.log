0.44s - pydevd: Use libraries filter: False

0.00s - IDE_PROJECT_ROOTS []

0.00s - Collecting default library roots.
0.00s - LIBRARY_ROOTS ['C:\\Users\\Me\\AppData\\Local\\Programs\\Python\\Python312\\Lib', 'C:\\Users\\Me\\AppData\\Roaming\\Python\\Python312\\site-packages', 'C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\.venv', 'C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\.venv\\Lib', 'C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\.venv\\Lib\\site-packages']

0.00s - Apply debug mode: debugpy-dap
0.00s - Preimport: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages;debugpy._vendored.force_pydevd
0.00s - Connecting to 127.0.0.1:53349
0.00s - Connected to: <socket.socket fd=792, family=2, type=1, proto=0, laddr=('127.0.0.1', 53351), raddr=('127.0.0.1', 53349)>.
0.00s - Applying patching to hide pydevd threads (Py3 version).
0.00s - Process PydevdAuthorizeRequest: {
    "arguments": {
        "debugServerAccessToken": "54a92e22fddd2613c3e8974342a7e171a9ce9aa5685adde5beb02309f4b0f1cf"
    },
    "command": "pydevdAuthorize",
    "seq": 1,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 1, "success": true, "command": "pydevdAuthorize", "body": {"clientAccessToken": null}, "seq": 2, "pydevd_cmd_id": 502}

0.00s - Process PydevdSystemInfoRequest: {
    "arguments": {},
    "command": "pydevdSystemInfo",
    "seq": 2,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 2, "success": true, "command": "pydevdSystemInfo", "body": {"python": {"version": "3.12.4final0", "implementation": {"name": "cpython", "version": "3.12.4final0", "description": "CPython"}}, "platform": {"name": "win32"}, "process": {"pid": 35744, "ppid": 26256, "executable": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\.venv\\Scripts\\python.exe", "bitness": 64}, "pydevd": {"usingCython": true, "usingFrameEval": false}}, "seq": 4, "pydevd_cmd_id": 502}

0.10s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _read_line
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\queue.py - get
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - set_tracing_for_untraced_contexts
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _locked_settrace
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - settrace
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - _settrace
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - listen
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - debug
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\public_api.py - wrapper
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - File traced: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py (force_check_project_scope)
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - settrace
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - _settrace
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - listen
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - debug
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\public_api.py - wrapper
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
24.89s - Process PydevdAuthorizeRequest: {
    "arguments": {
        "debugServerAccessToken": "54a92e22fddd2613c3e8974342a7e171a9ce9aa5685adde5beb02309f4b0f1cf"
    },
    "command": "pydevdAuthorize",
    "seq": 3,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 3, "success": true, "command": "pydevdAuthorize", "body": {"clientAccessToken": null}, "seq": 6, "pydevd_cmd_id": 502}

0.00s - Process InitializeRequest: {
    "arguments": {
        "adapterID": "python",
        "clientID": "vscode",
        "clientName": "Visual Studio Code",
        "columnsStartAt1": true,
        "linesStartAt1": true,
        "locale": "en",
        "pathFormat": "path",
        "supportsANSIStyling": true,
        "supportsArgsCanBeInterpretedByShell": true,
        "supportsInvalidatedEvent": true,
        "supportsMemoryEvent": true,
        "supportsMemoryReferences": true,
        "supportsProgressReporting": true,
        "supportsRunInTerminalRequest": true,
        "supportsStartDebuggingRequest": true,
        "supportsVariablePaging": true,
        "supportsVariableType": true
    },
    "command": "initialize",
    "seq": 4,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 4, "success": true, "command": "initialize", "seq": 8, "body": {"supportsConfigurationDoneRequest": true, "supportsFunctionBreakpoints": true, "supportsConditionalBreakpoints": true, "supportsHitConditionalBreakpoints": true, "supportsEvaluateForHovers": true, "exceptionBreakpointFilters": [{"filter": "raised", "label": "Raised Exceptions", "default": false}, {"filter": "uncaught", "label": "Uncaught Exceptions", "default": true}, {"filter": "userUnhandled", "label": "User Uncaught Exceptions", "default": false}], "supportsStepBack": false, "supportsSetVariable": true, "supportsRestartFrame": false, "supportsGotoTargetsRequest": true, "supportsStepInTargetsRequest": true, "supportsCompletionsRequest": true, "completionTriggerCharacters": [], "supportsModulesRequest": true, "additionalModuleColumns": [], "supportedChecksumAlgorithms": [], "supportsRestartRequest": false, "supportsExceptionOptions": true, "supportsValueFormattingOptions": true, "supportsExceptionInfoRequest": true, "supportTerminateDebuggee": true, "supportsDelayedStackTraceLoading": true, "supportsLoadedSourcesRequest": false, "supportsLogPoints": true, "supportsTerminateThreadsRequest": false, "supportsSetExpression": true, "supportsTerminateRequest": true, "supportsDataBreakpoints": false, "supportsReadMemoryRequest": false, "supportsDisassembleRequest": false, "supportsClipboardContext": true, "supportsDebuggerProperties": true, "pydevd": {"processId": 35744}}, "pydevd_cmd_id": 502}

0.00s - Process AttachRequest: {
    "arguments": {
        "__configurationTarget": 6,
        "__sessionId": "6aecedbe-67fc-4858-8ff8-07c9eddfd243",
        "clientOS": "windows",
        "connect": {
            "host": "localhost",
            "port": 5678
        },
        "cwd": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491",
        "debugOptions": [
            "RedirectOutput",
            "ShowReturnValue"
        ],
        "env": {
            "ALLOW_NO_OPENAI": "1",
            "LOG_LEVEL": "DEBUG",
            "PYDEVD_DISABLE_FILE_VALIDATION": "1"
        },
        "justMyCode": false,
        "name": "Attach to debugpy (5678)",
        "request": "attach",
        "showReturnValue": true,
        "type": "python",
        "workspaceFolder": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491"
    },
    "command": "attach",
    "seq": 5,
    "type": "request"
}

0.00s - sending cmd (http_json) -->    CMD_PROCESS_EVENT {"type": "event", "event": "process", "body": {"name": "run_debug.py", "systemProcessId": 35744, "isLocalProcess": true, "startMethod": "attach"}, "seq": 10, "pydevd_cmd_id": 204}

0.00s - pydevd: Use libraries filter: False

0.00s - Show return values: True
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "event", "event": "initialized", "seq": 12, "pydevd_cmd_id": 502}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 5, "success": true, "command": "attach", "seq": 14, "pydevd_cmd_id": 502}

0.00s - Process SetBreakpointsRequest: {
    "arguments": {
        "breakpoints": [
            {
                "line": 12
            },
            {
                "line": 17
            },
            {
                "line": 76
            },
            {
                "line": 82
            },
            {
                "line": 103
            },
            {
                "line": 136
            }
        ],
        "lines": [
            12,
            17,
            76,
            82,
            103,
            136
        ],
        "source": {
            "name": "main.py",
            "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
        },
        "sourceModified": false
    },
    "command": "setBreakpoints",
    "seq": 6,
    "type": "request"
}

0.00s - Request for breakpoint in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 12
0.00s - Breakpoint (after path translation) in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 12
0.00s - Added breakpoint:c:\users\me\documents\python\cpsc491\projects\class_elective_advisor_491\main.py - line:12 - func_name:None

0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - set_tracing_for_untraced_contexts
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - on_breakpoints_changed
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_api.py - add_breakpoint
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - on_setbreakpoints_request
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - process_net_command_json
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\queue.py - get
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - block_until_configuration_done
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _wait_for_attach
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - __call__
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\public_api.py - wrapper
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Request for breakpoint in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 17
0.00s - Breakpoint (after path translation) in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 17
0.00s - Added breakpoint:c:\users\me\documents\python\cpsc491\projects\class_elective_advisor_491\main.py - line:17 - func_name:None

0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - set_tracing_for_untraced_contexts
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - on_breakpoints_changed
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_api.py - add_breakpoint
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - on_setbreakpoints_request
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - process_net_command_json
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\queue.py - get
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - block_until_configuration_done
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _wait_for_attach
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - __call__
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\public_api.py - wrapper
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Request for breakpoint in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 76
0.00s - Breakpoint (after path translation) in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 76
0.00s - Added breakpoint:c:\users\me\documents\python\cpsc491\projects\class_elective_advisor_491\main.py - line:76 - func_name:None

0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - set_tracing_for_untraced_contexts
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - on_breakpoints_changed
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_api.py - add_breakpoint
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - on_setbreakpoints_request
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - process_net_command_json
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\queue.py - get
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - block_until_configuration_done
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _wait_for_attach
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - __call__
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\public_api.py - wrapper
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Request for breakpoint in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 82
0.00s - Breakpoint (after path translation) in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 82
0.00s - Added breakpoint:c:\users\me\documents\python\cpsc491\projects\class_elective_advisor_491\main.py - line:82 - func_name:None

0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - set_tracing_for_untraced_contexts
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - on_breakpoints_changed
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_api.py - add_breakpoint
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - on_setbreakpoints_request
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - process_net_command_json
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\queue.py - get
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - block_until_configuration_done
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _wait_for_attach
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - __call__
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\public_api.py - wrapper
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Request for breakpoint in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 103
0.00s - Breakpoint (after path translation) in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 103
0.00s - Added breakpoint:c:\users\me\documents\python\cpsc491\projects\class_elective_advisor_491\main.py - line:103 - func_name:None

0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - set_tracing_for_untraced_contexts
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - on_breakpoints_changed
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_api.py - add_breakpoint
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - on_setbreakpoints_request
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - process_net_command_json
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\queue.py - get
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - block_until_configuration_done
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _wait_for_attach
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - __call__
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\public_api.py - wrapper
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Request for breakpoint in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 136
0.00s - Breakpoint (after path translation) in: c:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py line: 136
0.00s - Added breakpoint:c:\users\me\documents\python\cpsc491\projects\class_elective_advisor_491\main.py - line:136 - func_name:None

0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - set_tracing_for_untraced_contexts
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - on_breakpoints_changed
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_api.py - add_breakpoint
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - on_setbreakpoints_request
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - process_net_command_json
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\queue.py - get
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - block_until_configuration_done
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _wait_for_attach
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - __call__
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\public_api.py - wrapper
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 6, "success": true, "command": "setBreakpoints", "body": {"breakpoints": [{"verified": true, "id": 0, "source": {"name": "main.py", "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"}, "line": 12}, {"verified": true, "id": 1, "source": {"name": "main.py", "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"}, "line": 17}, {"verified": true, "id": 2, "source": {"name": "main.py", "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"}, "line": 76}, {"verified": true, "id": 3, "source": {"name": "main.py", "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"}, "line": 82}, {"verified": true, "id": 4, "source": {"name": "main.py", "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"}, "line": 103}, {"verified": true, "id": 5, "source": {"name": "main.py", "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"}, "line": 136}]}, "seq": 16, "pydevd_cmd_id": 502}

0.00s - Process SetFunctionBreakpointsRequest: {
    "arguments": {
        "breakpoints": []
    },
    "command": "setFunctionBreakpoints",
    "seq": 7,
    "type": "request"
}

0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - set_tracing_for_untraced_contexts
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - on_breakpoints_changed
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_api.py - set_function_breakpoints
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - on_setfunctionbreakpoints_request
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - process_net_command_json
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\queue.py - get
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - block_until_configuration_done
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _wait_for_attach
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - __call__
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\public_api.py - wrapper
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 7, "success": true, "command": "setFunctionBreakpoints", "body": {"breakpoints": []}, "seq": 18, "pydevd_cmd_id": 502}

0.00s - Process SetExceptionBreakpointsRequest: {
    "arguments": {
        "filters": [
            "uncaught"
        ]
    },
    "command": "setExceptionBreakpoints",
    "seq": 8,
    "type": "request"
}

0.00s - Exceptions to hook on terminate: {'BaseException': <_pydevd_bundle.pydevd_breakpoints.ExceptionBreakpoint object at 0x00000200B9403FE0>}.
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - set_tracing_for_untraced_contexts
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - on_breakpoints_changed
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_api.py - add_python_exception_breakpoint
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - on_setexceptionbreakpoints_request
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_process_net_command_json.py - process_net_command_json
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\queue.py - get
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py - _on_run
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_daemon_thread.py - run
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap_inner
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - _bootstrap
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py - wait
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - block_until_configuration_done
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py - _wait_for_attach
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\server\api.py - __call__
0.00s - SKIP set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\public_api.py - wrapper
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 8, "success": true, "command": "setExceptionBreakpoints", "seq": 20, "body": {}, "pydevd_cmd_id": 502}

0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\json\__init__.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\json\encoder.py
0.00s - sending cmd (http_json) -->    CMD_THREAD_CREATE {"type": "event", "event": "thread", "body": {"reason": "started", "threadId": 1}, "seq": 22, "pydevd_cmd_id": 103}

0.01s - Process ConfigurationDoneRequest: {
    "arguments": {},
    "command": "configurationDone",
    "seq": 9,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 9, "success": true, "command": "configurationDone", "seq": 24, "pydevd_cmd_id": 502}

0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "debugpy client attached?", "category": "stdout", "source": {}}, "seq": 26, "pydevd_cmd_id": 116}

0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": " ", "category": "stdout", "source": {}}, "seq": 28, "pydevd_cmd_id": 116}

0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "True", "category": "stdout", "source": {}}, "seq": 30, "pydevd_cmd_id": 116}

0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "\n", "category": "stdout", "source": {}}, "seq": 32, "pydevd_cmd_id": 116}

0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "debugpy: client attached \u2014 continuing to run main.py", "category": "stdout", "source": {}}, "seq": 34, "pydevd_cmd_id": 116}

0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "\n", "category": "stdout", "source": {}}, "seq": 36, "pydevd_cmd_id": 116}

0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\pkgutil.py
0.00s - File traced: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\main.py (force_check_project_scope)
0.00s - File not traced (not in project): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\_virtualenv.py
0.00s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 10,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 10, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 38, "pydevd_cmd_id": 502}

0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\argparse.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\gettext.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\enum.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\re\__init__.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\re\_compiler.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\re\_parser.py
0.01s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\logging\__init__.py
0.01s - File traced: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\utilities\__init__.py (force_check_project_scope)
0.00s - File traced: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\utilities\logger_setup.py (force_check_project_scope)
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 12)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_INTO (original step: <Unknown: -1>)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 12
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "breakpoint", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 40, "pydevd_cmd_id": 157}

0.03s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 11,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 11, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 42, "pydevd_cmd_id": 502}

0.01s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 12,
    "type": "request"
}

0.00s - sending cmd (http_json) -->     CMD_MODULE_EVENT {"type": "event", "event": "module", "body": {"reason": "new", "module": {"id": 0, "name": "__main__", "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"}}, "seq": 44, "pydevd_cmd_id": 203}

0.00s - sending cmd (http_json) -->     CMD_MODULE_EVENT {"type": "event", "event": "module", "body": {"reason": "new", "module": {"id": 1, "name": "__main__", "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "package": "None"}}, "seq": 46, "pydevd_cmd_id": 203}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 12, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 12, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 48, "pydevd_cmd_id": 502}

0.07s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 13,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 13, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 50, "pydevd_cmd_id": 502}

0.37s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 14,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 14, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 52, "pydevd_cmd_id": 502}

0.00s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 15,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 15, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 54, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 16,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447590>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 16, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 6}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 7}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}]}, "seq": 56, "pydevd_cmd_id": 502}

3.25s - Process ContinueRequest: {
    "arguments": {
        "threadId": "*"
    },
    "command": "continue",
    "seq": 17,
    "type": "request"
}

0.00s - Resuming threads: * (except thread: None)
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 58, "pydevd_cmd_id": 158}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 17, "success": true, "command": "continue", "body": {"allThreadsContinued": true}, "seq": 60, "pydevd_cmd_id": 502}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 76)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_INTO (original step: <Unknown: -1>)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 76
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "breakpoint", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 62, "pydevd_cmd_id": 157}

0.00s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 18,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 18, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 64, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 19,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 19, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 76, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 66, "pydevd_cmd_id": 502}

0.41s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 20,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 20, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 68, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 21,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447DD0>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 21, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 7}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 12}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 70, "pydevd_cmd_id": 502}

0.01s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 22,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 22, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 72, "pydevd_cmd_id": 502}

4.84s - Process ContinueRequest: {
    "arguments": {
        "threadId": "*"
    },
    "command": "continue",
    "seq": 23,
    "type": "request"
}

0.00s - Resuming threads: * (except thread: None)
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 74, "pydevd_cmd_id": 158}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 23, "success": true, "command": "continue", "body": {"allThreadsContinued": true}, "seq": 76, "pydevd_cmd_id": 502}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 136)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_INTO (original step: <Unknown: -1>)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 136
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "breakpoint", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 78, "pydevd_cmd_id": 157}

0.00s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 24,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 24, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 80, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 25,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 25, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 136, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 82, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 26,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 26, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 84, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 27,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447DD0>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 27, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 16}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 17}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 86, "pydevd_cmd_id": 502}

0.01s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 28,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447DD0>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 28, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 18}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 19}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 88, "pydevd_cmd_id": 502}

0.40s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 29,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 29, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 90, "pydevd_cmd_id": 502}

2.41s - Process EvaluateRequest: {
    "arguments": {
        "column": 32,
        "context": "hover",
        "expression": "running",
        "format": {},
        "frameId": 2,
        "line": 135,
        "source": {
            "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
            "sourceReference": 0
        }
    },
    "command": "evaluate",
    "seq": 30,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_evaluate_expression_json at 0x00000200B92A0400>, (<_pydevd_bundle._debug_adapter.pydevd_schema.EvaluateRequest object at 0x00000200B9447590>, 'pid_35744_id_2202088395296'), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 30, "success": false, "command": "evaluate", "body": {"result": "", "variablesReference": 0, "presentationHint": {}}, "seq": 92, "message": "Exception occurred during evaluation.", "pydevd_cmd_id": 502}

1.28s - Process EvaluateRequest: {
    "arguments": {
        "column": 32,
        "context": "hover",
        "expression": "running",
        "format": {},
        "frameId": 2,
        "line": 135,
        "source": {
            "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
            "sourceReference": 0
        }
    },
    "command": "evaluate",
    "seq": 31,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_evaluate_expression_json at 0x00000200B92A0400>, (<_pydevd_bundle._debug_adapter.pydevd_schema.EvaluateRequest object at 0x00000200B938B710>, 'pid_35744_id_2202088395296'), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 31, "success": false, "command": "evaluate", "body": {"result": "", "variablesReference": 0, "presentationHint": {}}, "seq": 94, "message": "Exception occurred during evaluation.", "pydevd_cmd_id": 502}

0.17s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 32,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 32, "success": true, "command": "next", "seq": 96, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 98, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 137)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 137
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 100, "pydevd_cmd_id": 157}

0.00s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 33,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 33, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 102, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 34,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 34, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 137, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 104, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 35,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 35, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 106, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 36,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B94A4A10>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 36, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 20}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 21}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 108, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 37,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B94A4A10>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 37, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 22}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 23}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 110, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 38,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 38, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 112, "pydevd_cmd_id": 502}

0.20s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 39,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 39, "success": true, "command": "next", "seq": 114, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 116, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 136)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 136
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "breakpoint", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 118, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 40,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 40, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 120, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 41,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 41, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 136, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 122, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 42,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 42, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 124, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 43,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B94A4B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 43, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 24}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 25}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 126, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 44,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B94A4B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 44, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 26}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 27}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 128, "pydevd_cmd_id": 502}

0.41s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 45,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 45, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 130, "pydevd_cmd_id": 502}

0.07s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 46,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 46, "success": true, "command": "next", "seq": 132, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 134, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\locale.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\encodings\__init__.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\shutil.py
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 139)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 139
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 136, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 47,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 47, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 138, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 48,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 48, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 139, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 140, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 49,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 49, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 142, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 50,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 50, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 28}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 29}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 144, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 51,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 51, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 31}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 32}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 146, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 52,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 52, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 148, "pydevd_cmd_id": 502}

0.56s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 53,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 53, "success": true, "command": "next", "seq": 150, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 152, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 140)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 140
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 154, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 54,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 54, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 156, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 55,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 55, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 140, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 158, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 56,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 56, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 160, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 57,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 57, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 33}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 34}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 162, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 58,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 58, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 35}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 36}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 164, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 59,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 59, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 166, "pydevd_cmd_id": 502}

2.75s - Process EvaluateRequest: {
    "arguments": {
        "column": 26,
        "context": "hover",
        "expression": "allow",
        "format": {},
        "frameId": 2,
        "line": 135,
        "source": {
            "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
            "sourceReference": 0
        }
    },
    "command": "evaluate",
    "seq": 60,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_evaluate_expression_json at 0x00000200B92A0400>, (<_pydevd_bundle._debug_adapter.pydevd_schema.EvaluateRequest object at 0x00000200B938B710>, 'pid_35744_id_2202088395296'), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 60, "success": false, "command": "evaluate", "body": {"result": "", "variablesReference": 0, "presentationHint": {}}, "seq": 168, "message": "Exception occurred during evaluation.", "pydevd_cmd_id": 502}

1.35s - Process EvaluateRequest: {
    "arguments": {
        "column": 26,
        "context": "hover",
        "expression": "allow",
        "format": {},
        "frameId": 2,
        "line": 135,
        "source": {
            "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
            "sourceReference": 0
        }
    },
    "command": "evaluate",
    "seq": 61,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_evaluate_expression_json at 0x00000200B92A0400>, (<_pydevd_bundle._debug_adapter.pydevd_schema.EvaluateRequest object at 0x00000200B9447590>, 'pid_35744_id_2202088395296'), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 61, "success": false, "command": "evaluate", "body": {"result": "", "variablesReference": 0, "presentationHint": {}}, "seq": 170, "message": "Exception occurred during evaluation.", "pydevd_cmd_id": 502}

0.38s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 62,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 62, "success": true, "command": "next", "seq": 172, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 174, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 141)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 141
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 176, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 63,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 63, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 178, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 64,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 64, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 141, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 180, "pydevd_cmd_id": 502}

0.00s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 65,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 65, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 182, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 66,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 66, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 37}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 38}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 184, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 67,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 67, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 39}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 40}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 186, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 68,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 68, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 188, "pydevd_cmd_id": 502}

1.68s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 69,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 69, "success": true, "command": "next", "seq": 190, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 192, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 142)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 142
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 194, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 70,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 70, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 196, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 71,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 71, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 142, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 198, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 72,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 72, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 200, "pydevd_cmd_id": 502}

0.01s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 73,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 73, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 41}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 42}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 202, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 74,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 74, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 43}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 44}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 204, "pydevd_cmd_id": 502}

0.41s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 75,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 75, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 206, "pydevd_cmd_id": 502}

3.04s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 76,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 76, "success": true, "command": "next", "seq": 208, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 210, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 143)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 143
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 212, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 77,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 77, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 214, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 78,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 78, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 143, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 216, "pydevd_cmd_id": 502}

0.00s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 79,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 79, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 218, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 80,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 80, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 45}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 46}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 220, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 81,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 81, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 47}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 48}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 222, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 82,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 82, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 224, "pydevd_cmd_id": 502}

0.29s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 83,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 83, "success": true, "command": "next", "seq": 226, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 228, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 139)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 139
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 230, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 84,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 84, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 232, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 85,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 85, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 139, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 234, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 86,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 86, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 236, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 87,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 87, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 49}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 50}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 238, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 88,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 88, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 51}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 52}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 240, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 89,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 89, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 242, "pydevd_cmd_id": 502}

0.15s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 90,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 90, "success": true, "command": "next", "seq": 244, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 246, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 145)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 145
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 248, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 91,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 91, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 250, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 92,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 92, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 145, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 252, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 93,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 93, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 254, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 94,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 94, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 53}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 32}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 256, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 95,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 95, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 55}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 56}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 258, "pydevd_cmd_id": 502}

0.41s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 96,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 96, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 260, "pydevd_cmd_id": 502}

2.50s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 97,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 97, "success": true, "command": "next", "seq": 262, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 264, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 146)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 146
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 266, "pydevd_cmd_id": 157}

0.00s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 98,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 98, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 268, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 99,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 99, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 146, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 270, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 100,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 100, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 272, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 101,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9446C30>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 101, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 57}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 58}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 274, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 102,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9446C30>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 102, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 59}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 60}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 276, "pydevd_cmd_id": 502}

0.33s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 103,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 103, "success": true, "command": "next", "seq": 278, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 280, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 147)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 147
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 282, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 104,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 104, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 284, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 105,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 105, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 147, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 286, "pydevd_cmd_id": 502}

0.00s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 106,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 106, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 288, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 107,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 107, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 27}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 61}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 290, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 108,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 108, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 59}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 62}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 292, "pydevd_cmd_id": 502}

0.28s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 109,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 109, "success": true, "command": "next", "seq": 294, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 296, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 148)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 148
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 298, "pydevd_cmd_id": 157}

0.00s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 110,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 110, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 300, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 111,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 111, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 148, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 302, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 112,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 112, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 304, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 113,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 113, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 63}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 64}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 306, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 114,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 114, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 65}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 66}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 308, "pydevd_cmd_id": 502}

0.29s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 115,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 115, "success": true, "command": "next", "seq": 310, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 312, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 149)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 149
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 314, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 116,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 116, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 316, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 117,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 117, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 149, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 318, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 118,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 118, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 320, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 119,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 119, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 67}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 68}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 322, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 120,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 120, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 69}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 70}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 324, "pydevd_cmd_id": 502}

0.31s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 121,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 121, "success": true, "command": "next", "seq": 326, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 328, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 145)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 145
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 330, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 122,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 122, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 332, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 123,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 123, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 145, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 334, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 124,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 124, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 336, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 125,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 125, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 71}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 65}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 338, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 126,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B938B710>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 126, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 72}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 73}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 54, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 340, "pydevd_cmd_id": 502}

0.36s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 127,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 127, "success": true, "command": "next", "seq": 342, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 344, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 151)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 151
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 346, "pydevd_cmd_id": 157}

0.00s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 128,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 128, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 348, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 129,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 129, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 151, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 350, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 130,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 130, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 352, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 131,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 131, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 74}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 61}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 354, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 132,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 132, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 76}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 77}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 356, "pydevd_cmd_id": 502}

0.36s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 133,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 133, "success": true, "command": "next", "seq": 358, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 360, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 152)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 152
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 362, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 134,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 134, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 364, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 135,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 135, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 152, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 366, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 136,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 136, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 368, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 137,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9446C30>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 137, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 78}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 79}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 370, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 138,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9446C30>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 138, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 80}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 81}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 372, "pydevd_cmd_id": 502}

0.29s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 139,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 139, "success": true, "command": "next", "seq": 374, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 376, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 153)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 153
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 378, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 140,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 140, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 380, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 141,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 141, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 153, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 382, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 142,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 142, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 384, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 143,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9446C30>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 143, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 82}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 83}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 386, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 144,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9446C30>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 144, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 84}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 85}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 388, "pydevd_cmd_id": 502}

0.25s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 145,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 145, "success": true, "command": "next", "seq": 390, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 392, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 154)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 154
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 394, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 146,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 146, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 396, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 147,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 147, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 154, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 398, "pydevd_cmd_id": 502}

0.00s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 148,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 148, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 400, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 149,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 149, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 84}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 83}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 402, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 150,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 150, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 86}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 87}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 404, "pydevd_cmd_id": 502}

0.36s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 151,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 151, "success": true, "command": "next", "seq": 406, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 408, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 155)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 155
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 410, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 152,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 152, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 412, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 153,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 153, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 155, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 414, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 154,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 154, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 416, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 155,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 155, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 88}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 89}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 418, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 156,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 156, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 73}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 90}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 420, "pydevd_cmd_id": 502}

0.41s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 157,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 157, "success": true, "command": "next", "seq": 422, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 424, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 151)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 151
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 426, "pydevd_cmd_id": 157}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 158,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 158, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 428, "pydevd_cmd_id": 502}

0.00s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 159,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 159, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 430, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 160,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 160, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 151, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 432, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 161,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 161, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 434, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 162,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447590>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 162, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 91}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 92}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 436, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 163,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447590>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 163, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 93}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 94}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 75, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 438, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 164,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 164, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 440, "pydevd_cmd_id": 502}

0.02s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 165,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 165, "success": true, "command": "next", "seq": 442, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 444, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 157)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 157
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 446, "pydevd_cmd_id": 157}

0.00s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 166,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 166, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 448, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 167,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 167, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 157, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 450, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 168,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 168, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 452, "pydevd_cmd_id": 502}

0.01s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 169,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 169, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 95}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 80}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 454, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 170,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447B90>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 170, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 97}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 98}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 456, "pydevd_cmd_id": 502}

0.41s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 171,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 171, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 458, "pydevd_cmd_id": 502}

0.05s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 172,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 172, "success": true, "command": "next", "seq": 460, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 462, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 160)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 160
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 464, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 173,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 173, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 466, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 174,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 174, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 160, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 468, "pydevd_cmd_id": 502}

0.00s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 175,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 175, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 470, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 176,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447590>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 176, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 27}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 99}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 472, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 177,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447590>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 177, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 101}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 102}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 474, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 178,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 178, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 476, "pydevd_cmd_id": 502}

1.47s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 179,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 179, "success": true, "command": "next", "seq": 478, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 480, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 161)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 161
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 482, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 180,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 180, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 484, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 181,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 181, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 161, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 486, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 182,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 182, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 488, "pydevd_cmd_id": 502}

0.01s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 183,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447770>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 183, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 103}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 104}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 490, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 184,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447770>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 184, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 106}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 107}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 492, "pydevd_cmd_id": 502}

0.41s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 185,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 185, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 494, "pydevd_cmd_id": 502}

0.23s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 186,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 186, "success": true, "command": "next", "seq": 496, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 498, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 163)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 163
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 500, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 187,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 187, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 502, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 188,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 188, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 163, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 504, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 189,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 189, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 506, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 190,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447590>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 190, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 108}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 109}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "exit_code", "value": "0", "type": "int", "evaluateName": "exit_code", "variablesReference": 0}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 508, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 191,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447590>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 191, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 110}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 111}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "exit_code", "value": "0", "type": "int", "evaluateName": "exit_code", "variablesReference": 0}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 510, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 192,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 192, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 512, "pydevd_cmd_id": 502}

56.43s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 193,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 193, "success": true, "command": "next", "seq": 514, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 516, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 165)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 165
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 518, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 194,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 194, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 520, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 195,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 195, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 165, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 522, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 196,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 196, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 524, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 197,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447770>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 197, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 112}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 113}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "exit_code", "value": "0", "type": "int", "evaluateName": "exit_code", "variablesReference": 0}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 526, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 198,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447770>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 198, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 114}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 104}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "exit_code", "value": "0", "type": "int", "evaluateName": "exit_code", "variablesReference": 0}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 528, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 199,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 199, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 530, "pydevd_cmd_id": 502}

3.42s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 200,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 200, "success": true, "command": "next", "seq": 532, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 534, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 166)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 166
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 536, "pydevd_cmd_id": 157}

0.00s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 201,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 201, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 538, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 202,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 202, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 166, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 540, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 203,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 203, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 542, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 204,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447590>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 204, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 115}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 116}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "exit_code", "value": "0", "type": "int", "evaluateName": "exit_code", "variablesReference": 0}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 544, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 205,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447590>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 205, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 117}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 118}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "exit_code", "value": "0", "type": "int", "evaluateName": "exit_code", "variablesReference": 0}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 546, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 206,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 206, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 548, "pydevd_cmd_id": 502}

1.33s - Process NextRequest: {
    "arguments": {
        "threadId": 1
    },
    "command": "next",
    "seq": 207,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 207, "success": true, "command": "next", "seq": 550, "pydevd_cmd_id": 502}

0.00s - processing internal command: InternalThreadCommands(<function internal_step_in_thread at 0x00000200B928B560>, ('pid_35744_id_2202088395296', 108), {'set_additional_thread_info': <cyfunction set_additional_thread_info at 0x00000200B8F7BE00>})
0.00s - Resuming threads: * (except thread: <_MainThread(MainThread, started 4964)>)
0.00s - Skipped resuming thread: <_MainThread(MainThread, started 4964)>
0.00s - Set tracing of frame: main.py - <module>
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_code
0.00s - SKIP set tracing of frame: <frozen runpy> - _run_module_code
0.00s - SKIP set tracing of frame: <frozen runpy> - run_path
0.00s - Set tracing of frame: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py - <module>
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 552, "pydevd_cmd_id": 158}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: <module> (line: 167)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_OVER (original step: CMD_STEP_OVER)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, <module>, 167
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "step", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 554, "pydevd_cmd_id": 157}

0.01s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 208,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 208, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 556, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 209,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 209, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 167, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 558, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 2
    },
    "command": "scopes",
    "seq": 210,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 210, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 4, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 5, "expensive": false, "source": {}}]}, "seq": 560, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 4
    },
    "command": "variables",
    "seq": 211,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447770>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 211, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 119}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 120}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "exit_code", "value": "0", "type": "int", "evaluateName": "exit_code", "variablesReference": 0}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 562, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 5
    },
    "command": "variables",
    "seq": 212,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447770>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 212, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 121}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 92}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "exit_code", "value": "0", "type": "int", "evaluateName": "exit_code", "variablesReference": 0}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 564, "pydevd_cmd_id": 502}

0.41s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 213,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 213, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 2}, "seq": 566, "pydevd_cmd_id": 502}

10.26s - Process ContinueRequest: {
    "arguments": {
        "threadId": "*"
    },
    "command": "continue",
    "seq": 214,
    "type": "request"
}

0.00s - Resuming threads: * (except thread: None)
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 568, "pydevd_cmd_id": 158}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 214, "success": true, "command": "continue", "body": {"allThreadsContinued": true}, "seq": 570, "pydevd_cmd_id": 502}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - Suspending all threads except: <_MainThread(MainThread, started 4964)>
0.00s - PyDB.do_wait_suspend
name: _run_ai_test (line: 17)
 file: main.py
 event: line
 arg: None
 step: CMD_STEP_INTO (original step: <Unknown: -1>)
 thread: <_MainThread(MainThread, started 4964)>, thread id: pid_35744_id_2202088395296, id(thread): 2202088395296
0.00s -   Stack: main.py, _run_ai_test, 17
0.00s -   Stack: main.py, <module>, 167
0.00s -   Stack: <frozen runpy>, _run_code, 88
0.00s -   Stack: <frozen runpy>, _run_module_code, 98
0.00s -   Stack: <frozen runpy>, run_path, 286
0.00s -   Stack: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\run_debug.py, <module>, 22
0.00s - Skipping per-thread thread suspend notification.
0.00s - Thread suspend mode: single notification
0.00s - Sending suspend notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_SUSPEND_SINGLE_NOTIFICATION {"type": "event", "event": "stopped", "body": {"reason": "breakpoint", "threadId": 1, "preserveFocusHint": false, "allThreadsStopped": true}, "seq": 572, "pydevd_cmd_id": 157}

0.02s - Process ThreadsRequest: {
    "command": "threads",
    "seq": 215,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 215, "success": true, "command": "threads", "body": {"threads": [{"id": 1, "name": "MainThread"}]}, "seq": 574, "pydevd_cmd_id": 502}

0.00s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 1,
        "startFrame": 0,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 216,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 216, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 122, "name": "_run_ai_test", "line": 17, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}], "totalFrames": 3}, "seq": 576, "pydevd_cmd_id": 502}

0.01s - Process ScopesRequest: {
    "arguments": {
        "frameId": 122
    },
    "command": "scopes",
    "seq": 217,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 217, "success": true, "command": "scopes", "body": {"scopes": [{"name": "Locals", "variablesReference": 123, "expensive": false, "presentationHint": "locals", "source": {}}, {"name": "Globals", "variablesReference": 124, "expensive": false, "source": {}}]}, "seq": 578, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 123
    },
    "command": "variables",
    "seq": 218,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447770>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 218, "success": true, "command": "variables", "body": {"variables": [{"name": "option", "value": "1", "type": "int", "evaluateName": "option", "variablesReference": 0}]}, "seq": 580, "pydevd_cmd_id": 502}

0.00s - Process VariablesRequest: {
    "arguments": {
        "format": {},
        "variablesReference": 124
    },
    "command": "variables",
    "seq": 219,
    "type": "request"
}

0.00s - processing internal command: InternalThreadCommands(<function internal_get_variable_json at 0x00000200B928BA60>, (<_pydevd_bundle._debug_adapter.pydevd_schema.VariablesRequest object at 0x00000200B9447770>,), {})
0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 219, "success": true, "command": "variables", "body": {"variables": [{"name": "special variables", "value": "", "type": "", "evaluateName": "special variables", "variablesReference": 91}, {"name": "function variables", "value": "", "type": "", "evaluateName": "function variables", "variablesReference": 125}, {"name": "(return) ArgumentParser.__init__", "value": "None", "type": "NoneType", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']", "variablesReference": 0, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.add_argument", "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)", "type": "_StoreAction", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']", "variablesReference": 96, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "(return) ArgumentParser.parse_args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']", "variablesReference": 100, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "Optional", "value": "typing.Optional", "type": "_SpecialForm", "evaluateName": "Optional", "variablesReference": 8}, {"name": "argparse", "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>", "type": "module", "evaluateName": "argparse", "variablesReference": 9}, {"name": "args", "value": "Namespace(db=None, ai=1, ui=None)", "type": "Namespace", "evaluateName": "args", "variablesReference": 100}, {"name": "exit_code", "value": "0", "type": "int", "evaluateName": "exit_code", "variablesReference": 0}, {"name": "logging", "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>", "type": "module", "evaluateName": "logging", "variablesReference": 10}, {"name": "parser", "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)", "type": "ArgumentParser", "evaluateName": "parser", "variablesReference": 30}, {"name": "(return) setup_logger", "value": "<Logger utilities.logger_setup (INFO)>", "type": "Logger", "evaluateName": "__pydevd_ret_val_dict['setup_logger']", "variablesReference": 105, "presentationHint": {"attributes": ["readOnly"]}}, {"name": "sys", "value": "<module 'sys' (built-in)>", "type": "module", "evaluateName": "sys", "variablesReference": 11}, {"name": "_run_ai_test", "value": "<function _run_ai_test at 0x00000200B94C6D40>", "type": "function", "evaluateName": "_run_ai_test", "variablesReference": 13}, {"name": "_run_db_test", "value": "<function _run_db_test at 0x00000200B93F56C0>", "type": "function", "evaluateName": "_run_db_test", "variablesReference": 14}, {"name": "_run_ui", "value": "<function _run_ui at 0x00000200B94D4220>", "type": "function", "evaluateName": "_run_ui", "variablesReference": 15}]}, "seq": 582, "pydevd_cmd_id": 502}

0.42s - Process StackTraceRequest: {
    "arguments": {
        "format": {},
        "levels": 19,
        "startFrame": 1,
        "threadId": 1
    },
    "command": "stackTrace",
    "seq": 220,
    "type": "request"
}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 220, "success": true, "command": "stackTrace", "body": {"stackFrames": [{"id": 2, "name": "<module>", "line": 167, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py", "sourceReference": 0}}, {"id": 3, "name": "<module>", "line": 22, "column": 1, "source": {"path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py", "sourceReference": 0}}], "totalFrames": 3}, "seq": 584, "pydevd_cmd_id": 502}

10.15s - Process ContinueRequest: {
    "arguments": {
        "threadId": "*"
    },
    "command": "continue",
    "seq": 221,
    "type": "request"
}

0.00s - Resuming threads: * (except thread: None)
0.00s - Sending resume notification.
0.00s - sending cmd (http_json) --> CMD_THREAD_RESUME_SINGLE_NOTIFICATION {"type": "event", "event": "continued", "body": {"threadId": 1, "allThreadsContinued": true}, "seq": 586, "pydevd_cmd_id": 158}

0.00s - sending cmd (http_json) -->           CMD_RETURN {"type": "response", "request_seq": 221, "success": true, "command": "continue", "body": {"allThreadsContinued": true}, "seq": 588, "pydevd_cmd_id": 502}

0.00s - Leaving PyDB.do_wait_suspend: <_MainThread(MainThread, started 4964)> (pid_35744_id_2202088395296) 2202088395296
0.00s - File traced: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\ai_integration\ai_module.py (force_check_project_scope)
0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "2025-08-31 23:22:05,886 INFO __main__:21 Running AI test...\n", "category": "stderr", "source": {}}, "seq": 590, "pydevd_cmd_id": 116}

0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "2025-08-31 23:22:05,886 INFO ai_integration.ai_module:37 Running AI module test...\n", "category": "stderr", "source": {}}, "seq": 592, "pydevd_cmd_id": 116}

0.00s - File traced: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\utilities\load_env.py (force_check_project_scope)
0.00s - File not traced (not in project): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\dotenv\__init__.py
0.00s - File not traced (not in project): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\dotenv\main.py
0.00s - File not traced (not in project): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\dotenv\parser.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\typing.py
0.01s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\collections\__init__.py
0.00s - File not traced (not in project): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\dotenv\variables.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\contextlib.py
0.00s - File not traced (not in project): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\functools.py
0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "2025-08-31 23:22:05,900 INFO utilities.load_env:34 Loading environment variables.\n", "category": "stderr", "source": {}}, "seq": 594, "pydevd_cmd_id": 116}

0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "2025-08-31 23:22:05,902 INFO utilities.load_env:52 API Key loaded successfully.\n", "category": "stderr", "source": {}}, "seq": 596, "pydevd_cmd_id": 116}

0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "2025-08-31 23:22:05,902 INFO ai_integration.ai_module:55 main_test_ai option 1: OPENAI_API_KEY present.\n", "category": "stderr", "source": {}}, "seq": 598, "pydevd_cmd_id": 116}

0.00s - sending cmd (http_json) --> CMD_WRITE_TO_CONSOLE {"type": "event", "event": "output", "body": {"output": "2025-08-31 23:22:05,902 INFO __main__:24 AI test passed.\n", "category": "stderr", "source": {}}, "seq": 600, "pydevd_cmd_id": 116}

0.08s - sending cmd (http_json) -->      CMD_THREAD_KILL {"type": "event", "event": "thread", "body": {"reason": "exited", "threadId": 1}, "seq": 602, "pydevd_cmd_id": 104}

0.00s - PyDB.dispose_and_kill_all_pydevd_threads (called from: File "C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py", line 1859, in process_internal_commands)
0.00s - PyDB.dispose_and_kill_all_pydevd_threads (first call)
0.02s - No threads alive, finishing debug session
0.00s - PyDB.dispose_and_kill_all_pydevd_threads (called from: File "C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\pydevd.py", line 333, in _on_run)
0.00s - PyDB.dispose_and_kill_all_pydevd_threads (already disposed - wait)
0.00s - PyDB.dispose_and_kill_all_pydevd_threads waiting for pydb daemon threads to finish
0.00s - PyDB.dispose_and_kill_all_pydevd_threads no commands being processed.
0.00s - PyDB.dispose_and_kill_all_pydevd_threads killing thread: <WriterThread(pydevd.Writer, started daemon 31688)>
0.00s - sending cmd (http_json) -->             CMD_EXIT {"type": "event", "event": "terminated", "seq": 604, "body": {}, "pydevd_cmd_id": 129}

0.00s - pydevd.Writer received kill signal
0.00s - WriterThread: CMD_EXIT received
0.00s - WriterThread: exit
0.00s - PyDB.dispose_and_kill_all_pydevd_threads killing thread: <CheckAliveThread(pydevd.CheckAliveThread, started 36980)>
0.00s - pydevd.CheckAliveThread received kill signal
0.00s - PyDB.dispose_and_kill_all_pydevd_threads killing thread: <ReaderThread(pydevd.Reader, started daemon 37764)>
0.00s - pydevd.Reader received kill signal
0.00s - PyDB.dispose_and_kill_all_pydevd_threads killing thread: <_TimeoutThread(Thread-6, started daemon 26008)>
0.00s - Thread-6 received kill signal
0.00s - PyDB.dispose_and_kill_all_pydevd_threads killing thread: <PyDBCommandThread(pydevd.CommandThread, started daemon 37100)>
0.00s - pydevd.CommandThread received kill signal
0.00s - ReaderThread: empty contents received (len(line) == 0).
0.00s - PyDB.dispose_and_kill_all_pydevd_threads (called from: File "C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\_vendored\pydevd\_pydevd_bundle\pydevd_comm.py", line 324, in _terminate_on_socket_close)
0.00s - PyDB.dispose_and_kill_all_pydevd_threads (already disposed - wait)
0.50s - The following pydb threads may not have finished correctly: pydevd.Reader, pydevd.CommandThread
0.00s - PyDB.dispose_and_kill_all_pydevd_threads: finished
0.00s - PyDB.dispose_and_kill_all_pydevd_threads: finished
0.00s - PyDB.dispose_and_kill_all_pydevd_threads: finished
0.00s - ReaderThread: exit
0.00s - pydevd.stoptrace()
