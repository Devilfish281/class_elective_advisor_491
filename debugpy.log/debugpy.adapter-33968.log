I+00000.063: Windows-11-10.0.26100-SP0 AMD64
             CPython 3.12.4 (64-bit)
             debugpy 1.8.16

I+00000.156: debugpy.adapter startup environment:
             
             System paths:
                 sys.executable: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Scripts\python.exe
                 sys.prefix: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv
                 sys.base_prefix: C:\Users\Me\AppData\Local\Programs\Python\Python312
                 sys.real_prefix: <missing>
                 site.getsitepackages(): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv
                                         C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages
                 site.getusersitepackages(): C:\Users\Me\AppData\Roaming\Python\Python312\site-packages
                 sys.path (site-packages): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages
                 sysconfig.get_path('stdlib'): C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib
                 sysconfig.get_path('platstdlib'): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib
                 sysconfig.get_path('purelib'): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages
                 sysconfig.get_path('platlib'): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages
                 sysconfig.get_path('include'): C:\Users\Me\AppData\Local\Programs\Python\Python312\Include(C:\Users\Me\AppData\Local\Programs\Python\Python312\include)
                 sysconfig.get_path('scripts'): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Scripts
                 sysconfig.get_path('data'): C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv
                 os.__file__: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\os.py
                 threading.__file__: C:\Users\Me\AppData\Local\Programs\Python\Python312\Lib\threading.py
                 debugpy.__file__: C:\Users\Me\Documents\Python\CPSC491\Projects\class_elective_advisor_491\.venv\Lib\site-packages\debugpy\__init__.py
             
             Installed packages:
                 aiohappyeyeballs==2.6.1
                 aiohttp==3.12.15
                 aiosignal==1.4.0
                 alabaster==1.0.0
                 annotated-types==0.7.0
                 anyio==4.10.0
                 attrs==25.3.0
                 babel==2.17.0
                 bcrypt==4.3.0
                 certifi==2025.8.3
                 charset-normalizer==3.4.3
                 class-elective-advisor-491==0.1.0
                 colorama==0.4.6
                 dataclasses-json==0.6.7
                 debugpy==1.8.16
                 distro==1.9.0
                 docutils==0.21.2
                 frozenlist==1.7.0
                 greenlet==3.2.4
                 h11==0.16.0
                 httpcore==1.0.9
                 httpx==0.28.1
                 httpx-sse==0.4.1
                 idna==3.10
                 imagesize==1.4.1
                 Jinja2==3.1.6
                 jiter==0.10.0
                 jsonpatch==1.33
                 jsonpointer==3.0.0
                 langchain==0.3.27
                 langchain-community==0.3.29
                 langchain-core==0.3.75
                 langchain-openai==0.3.31
                 langchain-text-splitters==0.3.9
                 langgraph==0.6.6
                 langgraph-checkpoint==2.1.1
                 langgraph-prebuilt==0.6.4
                 langgraph-sdk==0.2.3
                 langsmith==0.4.16
                 MarkupSafe==3.0.2
                 marshmallow==3.26.1
                 multidict==6.6.4
                 mypy_extensions==1.1.0
                 numpy==2.3.2
                 openai==1.101.0
                 orjson==3.11.2
                 ormsgpack==1.10.0
                 packaging==25.0
                 pip==25.1.1
                 propcache==0.3.2
                 pydantic==2.11.7
                 pydantic_core==2.33.2
                 pydantic-settings==2.10.1
                 Pygments==2.19.2
                 python-dotenv==1.1.1
                 PyYAML==6.0.2
                 regex==2025.7.34
                 requests==2.32.5
                 requests-toolbelt==1.0.0
                 roman-numerals-py==3.1.0
                 sniffio==1.3.1
                 snowballstemmer==3.0.1
                 Sphinx==8.2.3
                 sphinxcontrib-applehelp==2.0.0
                 sphinxcontrib-devhelp==2.0.0
                 sphinxcontrib-htmlhelp==2.1.0
                 sphinxcontrib-jsmath==1.0.1
                 sphinxcontrib-qthelp==2.0.0
                 sphinxcontrib-serializinghtml==2.0.0
                 SQLAlchemy==2.0.43
                 tenacity==9.1.2
                 tiktoken==0.11.0
                 tqdm==4.67.1
                 typing_extensions==4.14.1
                 typing-inspect==0.9.0
                 typing-inspection==0.4.1
                 urllib3==2.5.0
                 xxhash==3.5.0
                 yarl==1.20.1
                 zstandard==0.24.0

I+00000.156: Listening for incoming Client connections on 127.0.0.1:5678...

I+00000.156: Listening for incoming Server connections on 127.0.0.1:53349...

I+00000.156: Sending endpoints info to debug server at localhost:53346:
             {
                 "client": {
                     "host": "127.0.0.1",
                     "port": 5678
                 },
                 "server": {
                     "host": "127.0.0.1",
                     "port": 53349
                 }
             }

I+00000.156: Accepted incoming Server connection from 127.0.0.1:53351.

D+00000.156: Starting message loop for channel Server[?]

D+00000.156: Server[?] <-- {
                 "seq": 1,
                 "type": "request",
                 "command": "pydevdAuthorize",
                 "arguments": {
                     "debugServerAccessToken": "54a92e22fddd2613c3e8974342a7e171a9ce9aa5685adde5beb02309f4b0f1cf"
                 }
             }

D+00000.156: Server[?] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 2,
                 "type": "response",
                 "request_seq": 1,
                 "success": true,
                 "command": "pydevdAuthorize",
                 "body": {
                     "clientAccessToken": null
                 }
             }

D+00000.156: Server[?] <-- {
                 "seq": 2,
                 "type": "request",
                 "command": "pydevdSystemInfo"
             }

D+00000.156: Server[?] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 4,
                 "type": "response",
                 "request_seq": 2,
                 "success": true,
                 "command": "pydevdSystemInfo",
                 "body": {
                     "python": {
                         "version": "3.12.4final0",
                         "implementation": {
                             "name": "cpython",
                             "version": "3.12.4final0",
                             "description": "CPython"
                         }
                     },
                     "platform": {
                         "name": "win32"
                     },
                     "process": {
                         "pid": 35744,
                         "ppid": 26256,
                         "executable": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\.venv\\Scripts\\python.exe",
                         "bitness": 64
                     },
                     "pydevd": {
                         "usingCython": true,
                         "usingFrameEval": false
                     }
                 }
             }

I+00000.156: No active debug session for parent process of Server[pid=35744].

I+00025.141: Accepted incoming Client connection from 127.0.0.1:53361.

D+00025.141: Starting message loop for channel Client[1]

D+00025.141: Client[1] --> {
                 "seq": 1,
                 "type": "request",
                 "command": "initialize",
                 "arguments": {
                     "clientID": "vscode",
                     "clientName": "Visual Studio Code",
                     "adapterID": "python",
                     "pathFormat": "path",
                     "linesStartAt1": true,
                     "columnsStartAt1": true,
                     "supportsVariableType": true,
                     "supportsVariablePaging": true,
                     "supportsRunInTerminalRequest": true,
                     "locale": "en",
                     "supportsProgressReporting": true,
                     "supportsInvalidatedEvent": true,
                     "supportsMemoryReferences": true,
                     "supportsArgsCanBeInterpretedByShell": true,
                     "supportsMemoryEvent": true,
                     "supportsStartDebuggingRequest": true,
                     "supportsANSIStyling": true
                 }
             }

D+00025.141: Client[1] <-- {
                 "seq": 1,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "category": "telemetry",
                     "output": "ptvsd",
                     "data": {
                         "packageVersion": "1.8.16"
                     }
                 }
             }

D+00025.141: Client[1] <-- {
                 "seq": 2,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "category": "telemetry",
                     "output": "debugpy",
                     "data": {
                         "packageVersion": "1.8.16"
                     }
                 }
             }

D+00025.141: Client[1] <-- {
                 "seq": 3,
                 "type": "event",
                 "event": "debugpySockets",
                 "body": {
                     "sockets": [
                         {
                             "host": "127.0.0.1",
                             "port": 5678,
                             "internal": false
                         },
                         {
                             "host": "127.0.0.1",
                             "port": 53349,
                             "internal": true
                         }
                     ]
                 }
             }

D+00025.141: /handling #1 request "initialize" from Client[1]/
             Capabilities: {
                 "supportsVariableType": true,
                 "supportsVariablePaging": true,
                 "supportsRunInTerminalRequest": true,
                 "supportsMemoryReferences": true,
                 "supportsArgsCanBeInterpretedByShell": true,
                 "supportsStartDebuggingRequest": true
             }

D+00025.141: /handling #1 request "initialize" from Client[1]/
             Expectations: {
                 "locale": "en",
                 "linesStartAt1": true,
                 "columnsStartAt1": true,
                 "pathFormat": "path"
             }

D+00025.141: /handling #1 request "initialize" from Client[1]/
             Client[1] <-- {
                 "seq": 4,
                 "type": "response",
                 "request_seq": 1,
                 "success": true,
                 "command": "initialize",
                 "body": {
                     "supportsCompletionsRequest": true,
                     "supportsConditionalBreakpoints": true,
                     "supportsConfigurationDoneRequest": true,
                     "supportsDebuggerProperties": true,
                     "supportsDelayedStackTraceLoading": true,
                     "supportsEvaluateForHovers": true,
                     "supportsExceptionInfoRequest": true,
                     "supportsExceptionOptions": true,
                     "supportsFunctionBreakpoints": true,
                     "supportsHitConditionalBreakpoints": true,
                     "supportsLogPoints": true,
                     "supportsModulesRequest": true,
                     "supportsSetExpression": true,
                     "supportsSetVariable": true,
                     "supportsValueFormattingOptions": true,
                     "supportsTerminateDebuggee": true,
                     "supportsTerminateRequest": true,
                     "supportsGotoTargetsRequest": true,
                     "supportsClipboardContext": true,
                     "exceptionBreakpointFilters": [
                         {
                             "filter": "raised",
                             "label": "Raised Exceptions",
                             "default": false,
                             "description": "Break whenever any exception is raised."
                         },
                         {
                             "filter": "uncaught",
                             "label": "Uncaught Exceptions",
                             "default": true,
                             "description": "Break when the process is exiting due to unhandled exception."
                         },
                         {
                             "filter": "userUnhandled",
                             "label": "User Uncaught Exceptions",
                             "default": false,
                             "description": "Break when exception escapes into library code."
                         }
                     ],
                     "supportsStepInTargetsRequest": true
                 }
             }

D+00025.156: Client[1] --> {
                 "seq": 2,
                 "type": "request",
                 "command": "attach",
                 "arguments": {
                     "name": "Attach to debugpy (5678)",
                     "type": "python",
                     "request": "attach",
                     "connect": {
                         "host": "localhost",
                         "port": 5678
                     },
                     "justMyCode": false,
                     "env": {
                         "LOG_LEVEL": "DEBUG",
                         "ALLOW_NO_OPENAI": "1",
                         "PYDEVD_DISABLE_FILE_VALIDATION": "1"
                     },
                     "cwd": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491",
                     "__configurationTarget": 6,
                     "clientOS": "windows",
                     "debugOptions": [
                         "RedirectOutput",
                         "ShowReturnValue"
                     ],
                     "showReturnValue": true,
                     "workspaceFolder": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491",
                     "__sessionId": "6aecedbe-67fc-4858-8ff8-07c9eddfd243"
                 }
             }

D+00025.156: /handling #2 request "attach" from Client[1]/
             Client[1] <-- {
                 "seq": 5,
                 "type": "event",
                 "event": "debugpyWaitingForServer",
                 "body": {
                     "host": "127.0.0.1",
                     "port": 53349
                 }
             }

I+00025.156: /handling #2 request "attach" from Client[1]/
             Session[1] waiting for connection from debug server...

I+00025.156: /handling #2 request "attach" from Client[1]/
             Attaching Server[pid=35744] to Session[1]

D+00025.156: /handling #2 request "attach" from Client[1]/
             Server[1] <-- {
                 "seq": 3,
                 "type": "request",
                 "command": "pydevdAuthorize",
                 "arguments": {
                     "debugServerAccessToken": "54a92e22fddd2613c3e8974342a7e171a9ce9aa5685adde5beb02309f4b0f1cf"
                 }
             }

D+00025.156: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 6,
                 "type": "response",
                 "request_seq": 3,
                 "success": true,
                 "command": "pydevdAuthorize",
                 "body": {
                     "clientAccessToken": null
                 }
             }

D+00025.156: /handling #2 request "attach" from Client[1]/
             Server[1] <-- {
                 "seq": 4,
                 "type": "request",
                 "command": "initialize",
                 "arguments": {
                     "clientID": "vscode",
                     "clientName": "Visual Studio Code",
                     "adapterID": "python",
                     "pathFormat": "path",
                     "linesStartAt1": true,
                     "columnsStartAt1": true,
                     "supportsVariableType": true,
                     "supportsVariablePaging": true,
                     "supportsRunInTerminalRequest": true,
                     "locale": "en",
                     "supportsProgressReporting": true,
                     "supportsInvalidatedEvent": true,
                     "supportsMemoryReferences": true,
                     "supportsArgsCanBeInterpretedByShell": true,
                     "supportsMemoryEvent": true,
                     "supportsStartDebuggingRequest": true,
                     "supportsANSIStyling": true
                 }
             }

D+00025.156: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 8,
                 "type": "response",
                 "request_seq": 4,
                 "success": true,
                 "command": "initialize",
                 "body": {
                     "supportsConfigurationDoneRequest": true,
                     "supportsFunctionBreakpoints": true,
                     "supportsConditionalBreakpoints": true,
                     "supportsHitConditionalBreakpoints": true,
                     "supportsEvaluateForHovers": true,
                     "exceptionBreakpointFilters": [
                         {
                             "filter": "raised",
                             "label": "Raised Exceptions",
                             "default": false
                         },
                         {
                             "filter": "uncaught",
                             "label": "Uncaught Exceptions",
                             "default": true
                         },
                         {
                             "filter": "userUnhandled",
                             "label": "User Uncaught Exceptions",
                             "default": false
                         }
                     ],
                     "supportsStepBack": false,
                     "supportsSetVariable": true,
                     "supportsRestartFrame": false,
                     "supportsGotoTargetsRequest": true,
                     "supportsStepInTargetsRequest": true,
                     "supportsCompletionsRequest": true,
                     "completionTriggerCharacters": [],
                     "supportsModulesRequest": true,
                     "additionalModuleColumns": [],
                     "supportedChecksumAlgorithms": [],
                     "supportsRestartRequest": false,
                     "supportsExceptionOptions": true,
                     "supportsValueFormattingOptions": true,
                     "supportsExceptionInfoRequest": true,
                     "supportTerminateDebuggee": true,
                     "supportsDelayedStackTraceLoading": true,
                     "supportsLoadedSourcesRequest": false,
                     "supportsLogPoints": true,
                     "supportsTerminateThreadsRequest": false,
                     "supportsSetExpression": true,
                     "supportsTerminateRequest": true,
                     "supportsDataBreakpoints": false,
                     "supportsReadMemoryRequest": false,
                     "supportsDisassembleRequest": false,
                     "supportsClipboardContext": true,
                     "supportsDebuggerProperties": true,
                     "pydevd": {
                         "processId": 35744
                     }
                 }
             }

D+00025.156: /handling #2 request "attach" from Client[1]/
             Capabilities: {
                 "supportsCompletionsRequest": true,
                 "supportsConditionalBreakpoints": true,
                 "supportsConfigurationDoneRequest": true,
                 "supportsDataBreakpoints": false,
                 "supportsDelayedStackTraceLoading": true,
                 "supportsDisassembleRequest": false,
                 "supportsEvaluateForHovers": true,
                 "supportsExceptionInfoRequest": true,
                 "supportsExceptionOptions": true,
                 "supportsFunctionBreakpoints": true,
                 "supportsGotoTargetsRequest": true,
                 "supportsHitConditionalBreakpoints": true,
                 "supportsLoadedSourcesRequest": false,
                 "supportsLogPoints": true,
                 "supportsModulesRequest": true,
                 "supportsReadMemoryRequest": false,
                 "supportsRestartFrame": false,
                 "supportsRestartRequest": false,
                 "supportsSetExpression": true,
                 "supportsSetVariable": true,
                 "supportsStepBack": false,
                 "supportsStepInTargetsRequest": true,
                 "supportsTerminateRequest": true,
                 "supportsTerminateThreadsRequest": false,
                 "supportsValueFormattingOptions": true,
                 "exceptionBreakpointFilters": [
                     {
                         "filter": "raised",
                         "label": "Raised Exceptions",
                         "default": false
                     },
                     {
                         "filter": "uncaught",
                         "label": "Uncaught Exceptions",
                         "default": true
                     },
                     {
                         "filter": "userUnhandled",
                         "label": "User Uncaught Exceptions",
                         "default": false
                     }
                 ],
                 "additionalModuleColumns": [],
                 "supportedChecksumAlgorithms": []
             }

D+00025.156: /handling #2 request "attach" from Client[1]/
             Server[1] <-- {
                 "seq": 5,
                 "type": "request",
                 "command": "attach",
                 "arguments": {
                     "name": "Attach to debugpy (5678)",
                     "type": "python",
                     "request": "attach",
                     "connect": {
                         "host": "localhost",
                         "port": 5678
                     },
                     "justMyCode": false,
                     "env": {
                         "LOG_LEVEL": "DEBUG",
                         "ALLOW_NO_OPENAI": "1",
                         "PYDEVD_DISABLE_FILE_VALIDATION": "1"
                     },
                     "cwd": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491",
                     "__configurationTarget": 6,
                     "clientOS": "windows",
                     "debugOptions": [
                         "RedirectOutput",
                         "ShowReturnValue"
                     ],
                     "showReturnValue": true,
                     "workspaceFolder": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491",
                     "__sessionId": "6aecedbe-67fc-4858-8ff8-07c9eddfd243"
                 }
             }

D+00025.156: Server[1] --> {
                 "pydevd_cmd_id": 204,
                 "seq": 10,
                 "type": "event",
                 "event": "process",
                 "body": {
                     "name": "run_debug.py",
                     "systemProcessId": 35744,
                     "isLocalProcess": true,
                     "startMethod": "attach"
                 }
             }

D+00025.156: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 12,
                 "type": "event",
                 "event": "initialized"
             }

D+00025.156: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 14,
                 "type": "response",
                 "request_seq": 5,
                 "success": true,
                 "command": "attach"
             }

D+00025.156: /handling #2 request "attach" from Client[1]/
             Client[1] <-- {
                 "seq": 6,
                 "type": "event",
                 "event": "initialized"
             }

D+00025.156: /handling #10 event "process" from Server[1]/
             Propagation deferred.

D+00025.156: Client[1] --> {
                 "seq": 3,
                 "type": "request",
                 "command": "setBreakpoints",
                 "arguments": {
                     "source": {
                         "name": "main.py",
                         "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                     },
                     "lines": [
                         12,
                         17,
                         76,
                         82,
                         103,
                         136
                     ],
                     "breakpoints": [
                         {
                             "line": 12
                         },
                         {
                             "line": 17
                         },
                         {
                             "line": 76
                         },
                         {
                             "line": 82
                         },
                         {
                             "line": 103
                         },
                         {
                             "line": 136
                         }
                     ],
                     "sourceModified": false
                 }
             }

D+00025.156: Client[1] --> {
                 "seq": 4,
                 "type": "request",
                 "command": "setFunctionBreakpoints",
                 "arguments": {
                     "breakpoints": []
                 }
             }

D+00025.156: Client[1] --> {
                 "seq": 5,
                 "type": "request",
                 "command": "setExceptionBreakpoints",
                 "arguments": {
                     "filters": [
                         "uncaught"
                     ]
                 }
             }

D+00025.156: /handling #3 request "setBreakpoints" from Client[1]/
             Server[1] <-- {
                 "seq": 6,
                 "type": "request",
                 "command": "setBreakpoints",
                 "arguments": {
                     "source": {
                         "name": "main.py",
                         "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                     },
                     "lines": [
                         12,
                         17,
                         76,
                         82,
                         103,
                         136
                     ],
                     "breakpoints": [
                         {
                             "line": 12
                         },
                         {
                             "line": 17
                         },
                         {
                             "line": 76
                         },
                         {
                             "line": 82
                         },
                         {
                             "line": 103
                         },
                         {
                             "line": 136
                         }
                     ],
                     "sourceModified": false
                 }
             }

D+00025.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 16,
                 "type": "response",
                 "request_seq": 6,
                 "success": true,
                 "command": "setBreakpoints",
                 "body": {
                     "breakpoints": [
                         {
                             "verified": true,
                             "id": 0,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 12
                         },
                         {
                             "verified": true,
                             "id": 1,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 17
                         },
                         {
                             "verified": true,
                             "id": 2,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 76
                         },
                         {
                             "verified": true,
                             "id": 3,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 82
                         },
                         {
                             "verified": true,
                             "id": 4,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 103
                         },
                         {
                             "verified": true,
                             "id": 5,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 136
                         }
                     ]
                 }
             }

D+00025.172: /handling #3 request "setBreakpoints" from Client[1]/
             Client[1] <-- {
                 "seq": 7,
                 "type": "response",
                 "request_seq": 3,
                 "success": true,
                 "command": "setBreakpoints",
                 "body": {
                     "breakpoints": [
                         {
                             "verified": true,
                             "id": 0,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 12
                         },
                         {
                             "verified": true,
                             "id": 1,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 17
                         },
                         {
                             "verified": true,
                             "id": 2,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 76
                         },
                         {
                             "verified": true,
                             "id": 3,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 82
                         },
                         {
                             "verified": true,
                             "id": 4,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 103
                         },
                         {
                             "verified": true,
                             "id": 5,
                             "source": {
                                 "name": "main.py",
                                 "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                             },
                             "line": 136
                         }
                     ]
                 }
             }

D+00025.172: /handling #4 request "setFunctionBreakpoints" from Client[1]/
             Server[1] <-- {
                 "seq": 7,
                 "type": "request",
                 "command": "setFunctionBreakpoints",
                 "arguments": {
                     "breakpoints": []
                 }
             }

D+00025.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 18,
                 "type": "response",
                 "request_seq": 7,
                 "success": true,
                 "command": "setFunctionBreakpoints",
                 "body": {
                     "breakpoints": []
                 }
             }

D+00025.172: /handling #4 request "setFunctionBreakpoints" from Client[1]/
             Client[1] <-- {
                 "seq": 8,
                 "type": "response",
                 "request_seq": 4,
                 "success": true,
                 "command": "setFunctionBreakpoints",
                 "body": {
                     "breakpoints": []
                 }
             }

D+00025.172: /handling #5 request "setExceptionBreakpoints" from Client[1]/
             Server[1] <-- {
                 "seq": 8,
                 "type": "request",
                 "command": "setExceptionBreakpoints",
                 "arguments": {
                     "filters": [
                         "uncaught"
                     ]
                 }
             }

D+00025.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 20,
                 "type": "response",
                 "request_seq": 8,
                 "success": true,
                 "command": "setExceptionBreakpoints",
                 "body": {}
             }

D+00025.172: /handling #5 request "setExceptionBreakpoints" from Client[1]/
             Client[1] <-- {
                 "seq": 9,
                 "type": "response",
                 "request_seq": 5,
                 "success": true,
                 "command": "setExceptionBreakpoints"
             }

D+00025.172: Server[1] --> {
                 "pydevd_cmd_id": 103,
                 "seq": 22,
                 "type": "event",
                 "event": "thread",
                 "body": {
                     "reason": "started",
                     "threadId": 1
                 }
             }

D+00025.172: /handling #22 event "thread" from Server[1]/
             Propagation deferred.

D+00025.172: Client[1] --> {
                 "seq": 6,
                 "type": "request",
                 "command": "configurationDone"
             }

D+00025.172: /handling #6 request "configurationDone" from Client[1]/
             Server[1] <-- {
                 "seq": 9,
                 "type": "request",
                 "command": "configurationDone"
             }

D+00025.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 24,
                 "type": "response",
                 "request_seq": 9,
                 "success": true,
                 "command": "configurationDone"
             }

D+00025.172: /handling #6 request "configurationDone" from Client[1]/
             Client[1] <-- {
                 "seq": 10,
                 "type": "response",
                 "request_seq": 6,
                 "success": true,
                 "command": "configurationDone"
             }

D+00025.172: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 26,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "debugpy client attached?",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.172: /handling #6 request "configurationDone" from Client[1]/
             Client[1] <-- {
                 "seq": 11,
                 "type": "response",
                 "request_seq": 2,
                 "success": true,
                 "command": "attach"
             }

D+00025.172: /handling #6 request "configurationDone" from Client[1]/
             Propagating deferred events to Client[1]...

D+00025.172: /handling #6 request "configurationDone" from Client[1]/
             Propagating deferred #10 event "process" from Server[1]

D+00025.188: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 28,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": " ",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.188: /handling #6 request "configurationDone" from Client[1]/
             Client[1] <-- {
                 "seq": 12,
                 "type": "event",
                 "event": "process",
                 "body": {
                     "name": "run_debug.py",
                     "systemProcessId": 35744,
                     "isLocalProcess": true,
                     "startMethod": "attach"
                 }
             }

D+00025.188: /handling #6 request "configurationDone" from Client[1]/
             Propagating deferred #22 event "thread" from Server[1]

D+00025.188: /handling #6 request "configurationDone" from Client[1]/
             Client[1] <-- {
                 "seq": 13,
                 "type": "event",
                 "event": "thread",
                 "body": {
                     "reason": "started",
                     "threadId": 1
                 }
             }

D+00025.188: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 30,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "True",
                     "category": "stdout",
                     "source": {}
                 }
             }

I+00025.188: /handling #6 request "configurationDone" from Client[1]/
             All deferred events propagated to Client[1].

D+00025.188: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 32,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "\n",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.188: /handling #26 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 14,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "debugpy client attached?",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.188: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 34,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "debugpy: client attached \u2014 continuing to run main.py",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.188: /handling #28 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 15,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": " ",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.188: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 36,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "\n",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.188: /handling #30 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 16,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "True",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.188: /handling #32 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 17,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "\n",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.188: /handling #34 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 18,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "debugpy: client attached \u2014 continuing to run main.py",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.188: /handling #36 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 19,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "\n",
                     "category": "stdout",
                     "source": {}
                 }
             }

D+00025.188: Client[1] --> {
                 "seq": 7,
                 "type": "request",
                 "command": "threads"
             }

D+00025.188: /handling #7 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 10,
                 "type": "request",
                 "command": "threads"
             }

D+00025.188: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 38,
                 "type": "response",
                 "request_seq": 10,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00025.188: /handling #7 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 20,
                 "type": "response",
                 "request_seq": 7,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00025.203: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 40,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00025.203: /handling #40 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 21,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00025.234: Client[1] --> {
                 "seq": 8,
                 "type": "request",
                 "command": "threads"
             }

D+00025.234: /handling #8 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 11,
                 "type": "request",
                 "command": "threads"
             }

D+00025.234: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 42,
                 "type": "response",
                 "request_seq": 11,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00025.234: /handling #8 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 22,
                 "type": "response",
                 "request_seq": 8,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00025.234: Client[1] --> {
                 "seq": 9,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00025.234: /handling #9 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 12,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00025.234: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 44,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 0,
                         "name": "__main__",
                         "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                     }
                 }
             }

D+00025.234: Server[1] --> {
                 "pydevd_cmd_id": 203,
                 "seq": 46,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 1,
                         "name": "__main__",
                         "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                         "package": "None"
                     }
                 }
             }

D+00025.234: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 48,
                 "type": "response",
                 "request_seq": 12,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 12,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00025.250: /handling #9 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 23,
                 "type": "response",
                 "request_seq": 9,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 12,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00025.250: /handling #44 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 24,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 0,
                         "name": "__main__",
                         "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py"
                     }
                 }
             }

D+00025.250: /handling #46 event "module" from Server[1]/
             Client[1] <-- {
                 "seq": 25,
                 "type": "event",
                 "event": "module",
                 "body": {
                     "reason": "new",
                     "module": {
                         "id": 1,
                         "name": "__main__",
                         "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                         "package": "None"
                     }
                 }
             }

D+00025.313: Client[1] --> {
                 "seq": 10,
                 "type": "request",
                 "command": "threads"
             }

D+00025.313: /handling #10 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 13,
                 "type": "request",
                 "command": "threads"
             }

D+00025.313: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 50,
                 "type": "response",
                 "request_seq": 13,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00025.313: /handling #10 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 26,
                 "type": "response",
                 "request_seq": 10,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00025.688: Client[1] --> {
                 "seq": 11,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00025.688: Client[1] --> {
                 "seq": 12,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00025.688: /handling #11 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 14,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00025.688: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 52,
                 "type": "response",
                 "request_seq": 14,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00025.688: /handling #11 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 27,
                 "type": "response",
                 "request_seq": 11,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00025.688: /handling #12 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 15,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00025.688: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 54,
                 "type": "response",
                 "request_seq": 15,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00025.688: /handling #12 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 28,
                 "type": "response",
                 "request_seq": 12,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00025.688: Client[1] --> {
                 "seq": 13,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00025.688: /handling #13 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 16,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00025.688: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 56,
                 "type": "response",
                 "request_seq": 16,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 6
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 7
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         }
                     ]
                 }
             }

D+00025.688: /handling #13 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 29,
                 "type": "response",
                 "request_seq": 13,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 6
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 7
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         }
                     ]
                 }
             }

D+00028.938: Client[1] --> {
                 "seq": 14,
                 "type": "request",
                 "command": "continue",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00028.938: /handling #14 request "continue" from Client[1]/
             Server[1] <-- {
                 "seq": 17,
                 "type": "request",
                 "command": "continue",
                 "arguments": {
                     "threadId": "*"
                 }
             }

D+00028.938: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 58,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00028.938: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 60,
                 "type": "response",
                 "request_seq": 17,
                 "success": true,
                 "command": "continue",
                 "body": {
                     "allThreadsContinued": true
                 }
             }

D+00028.938: /handling #14 request "continue" from Client[1]/
             Client[1] <-- {
                 "seq": 30,
                 "type": "response",
                 "request_seq": 14,
                 "success": true,
                 "command": "continue",
                 "body": {
                     "allThreadsContinued": true
                 }
             }

D+00028.938: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 62,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00028.938: /handling #58 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 31,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00028.938: /handling #62 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 32,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00028.938: Client[1] --> {
                 "seq": 15,
                 "type": "request",
                 "command": "threads"
             }

D+00028.938: /handling #15 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 18,
                 "type": "request",
                 "command": "threads"
             }

D+00028.938: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 64,
                 "type": "response",
                 "request_seq": 18,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00028.938: /handling #15 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 33,
                 "type": "response",
                 "request_seq": 15,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00028.938: Client[1] --> {
                 "seq": 16,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00028.938: /handling #16 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 19,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00028.938: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 66,
                 "type": "response",
                 "request_seq": 19,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 76,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00028.938: /handling #16 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 34,
                 "type": "response",
                 "request_seq": 16,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 76,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00029.344: Client[1] --> {
                 "seq": 17,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00029.344: /handling #17 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 20,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00029.344: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 68,
                 "type": "response",
                 "request_seq": 20,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00029.344: /handling #17 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 35,
                 "type": "response",
                 "request_seq": 17,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00029.344: Client[1] --> {
                 "seq": 18,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00029.344: /handling #18 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 21,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00029.344: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 70,
                 "type": "response",
                 "request_seq": 21,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 7
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 12
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00029.344: /handling #18 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 36,
                 "type": "response",
                 "request_seq": 18,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 7
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 12
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00029.359: Client[1] --> {
                 "seq": 19,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00029.359: /handling #19 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 22,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00029.359: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 72,
                 "type": "response",
                 "request_seq": 22,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00029.359: /handling #19 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 37,
                 "type": "response",
                 "request_seq": 19,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00034.203: Client[1] --> {
                 "seq": 20,
                 "type": "request",
                 "command": "continue",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00034.203: /handling #20 request "continue" from Client[1]/
             Server[1] <-- {
                 "seq": 23,
                 "type": "request",
                 "command": "continue",
                 "arguments": {
                     "threadId": "*"
                 }
             }

D+00034.203: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 74,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00034.203: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 76,
                 "type": "response",
                 "request_seq": 23,
                 "success": true,
                 "command": "continue",
                 "body": {
                     "allThreadsContinued": true
                 }
             }

D+00034.203: /handling #20 request "continue" from Client[1]/
             Client[1] <-- {
                 "seq": 38,
                 "type": "response",
                 "request_seq": 20,
                 "success": true,
                 "command": "continue",
                 "body": {
                     "allThreadsContinued": true
                 }
             }

D+00034.203: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 78,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00034.203: /handling #74 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 39,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00034.203: /handling #78 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 40,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00034.203: Client[1] --> {
                 "seq": 21,
                 "type": "request",
                 "command": "threads"
             }

D+00034.203: /handling #21 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 24,
                 "type": "request",
                 "command": "threads"
             }

D+00034.203: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 80,
                 "type": "response",
                 "request_seq": 24,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00034.203: /handling #21 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 41,
                 "type": "response",
                 "request_seq": 21,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00034.219: Client[1] --> {
                 "seq": 22,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00034.219: /handling #22 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 25,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00034.219: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 82,
                 "type": "response",
                 "request_seq": 25,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 136,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00034.219: /handling #22 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 42,
                 "type": "response",
                 "request_seq": 22,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 136,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00034.219: Client[1] --> {
                 "seq": 23,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00034.219: /handling #23 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 26,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00034.219: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 84,
                 "type": "response",
                 "request_seq": 26,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00034.219: /handling #23 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 43,
                 "type": "response",
                 "request_seq": 23,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00034.234: Client[1] --> {
                 "seq": 24,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00034.234: /handling #24 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 27,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00034.234: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 86,
                 "type": "response",
                 "request_seq": 27,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 16
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 17
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00034.234: /handling #24 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 44,
                 "type": "response",
                 "request_seq": 24,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 16
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 17
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00034.234: Client[1] --> {
                 "seq": 25,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00034.234: /handling #25 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 28,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00034.234: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 88,
                 "type": "response",
                 "request_seq": 28,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 18
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 19
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00034.234: /handling #25 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 45,
                 "type": "response",
                 "request_seq": 25,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 18
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 19
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00034.641: Client[1] --> {
                 "seq": 26,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00034.641: /handling #26 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 29,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00034.641: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 90,
                 "type": "response",
                 "request_seq": 29,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00034.641: /handling #26 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 46,
                 "type": "response",
                 "request_seq": 26,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00037.047: Client[1] --> {
                 "seq": 27,
                 "type": "request",
                 "command": "evaluate",
                 "arguments": {
                     "expression": "running",
                     "frameId": 2,
                     "context": "hover",
                     "line": 135,
                     "column": 32,
                     "source": {
                         "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                         "sourceReference": 0
                     }
                 }
             }

D+00037.047: /handling #27 request "evaluate" from Client[1]/
             Server[1] <-- {
                 "seq": 30,
                 "type": "request",
                 "command": "evaluate",
                 "arguments": {
                     "expression": "running",
                     "frameId": 2,
                     "context": "hover",
                     "line": 135,
                     "column": 32,
                     "source": {
                         "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                         "sourceReference": 0
                     }
                 }
             }

D+00037.063: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 92,
                 "type": "response",
                 "request_seq": 30,
                 "success": false,
                 "command": "evaluate",
                 "message": "Exception occurred during evaluation.",
                 "body": {
                     "result": "",
                     "variablesReference": 0,
                     "presentationHint": {}
                 }
             }

D+00037.063: /handling #92 response to 30 request "evaluate" to Server[1]/
             Client[1] <-- {
                 "seq": 47,
                 "type": "response",
                 "request_seq": 27,
                 "success": false,
                 "command": "evaluate",
                 "message": "Exception occurred during evaluation."
             }

D+00038.344: Client[1] --> {
                 "seq": 28,
                 "type": "request",
                 "command": "evaluate",
                 "arguments": {
                     "expression": "running",
                     "frameId": 2,
                     "context": "hover",
                     "line": 135,
                     "column": 32,
                     "source": {
                         "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                         "sourceReference": 0
                     }
                 }
             }

D+00038.344: /handling #28 request "evaluate" from Client[1]/
             Server[1] <-- {
                 "seq": 31,
                 "type": "request",
                 "command": "evaluate",
                 "arguments": {
                     "expression": "running",
                     "frameId": 2,
                     "context": "hover",
                     "line": 135,
                     "column": 32,
                     "source": {
                         "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                         "sourceReference": 0
                     }
                 }
             }

D+00038.344: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 94,
                 "type": "response",
                 "request_seq": 31,
                 "success": false,
                 "command": "evaluate",
                 "message": "Exception occurred during evaluation.",
                 "body": {
                     "result": "",
                     "variablesReference": 0,
                     "presentationHint": {}
                 }
             }

D+00038.344: /handling #94 response to 31 request "evaluate" to Server[1]/
             Client[1] <-- {
                 "seq": 48,
                 "type": "response",
                 "request_seq": 28,
                 "success": false,
                 "command": "evaluate",
                 "message": "Exception occurred during evaluation."
             }

D+00038.516: Client[1] --> {
                 "seq": 29,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00038.516: /handling #29 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 32,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00038.516: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 96,
                 "type": "response",
                 "request_seq": 32,
                 "success": true,
                 "command": "next"
             }

D+00038.516: /handling #29 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 49,
                 "type": "response",
                 "request_seq": 29,
                 "success": true,
                 "command": "next"
             }

D+00038.516: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 98,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00038.516: /handling #98 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 50,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00038.516: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 100,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00038.516: /handling #100 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 51,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00038.516: Client[1] --> {
                 "seq": 30,
                 "type": "request",
                 "command": "threads"
             }

D+00038.516: /handling #30 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 33,
                 "type": "request",
                 "command": "threads"
             }

D+00038.516: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 102,
                 "type": "response",
                 "request_seq": 33,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00038.516: /handling #30 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 52,
                 "type": "response",
                 "request_seq": 30,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00038.516: Client[1] --> {
                 "seq": 31,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00038.516: /handling #31 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 34,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00038.516: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 104,
                 "type": "response",
                 "request_seq": 34,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 137,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00038.516: /handling #31 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 53,
                 "type": "response",
                 "request_seq": 31,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 137,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00038.516: Client[1] --> {
                 "seq": 32,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00038.516: /handling #32 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 35,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00038.516: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 106,
                 "type": "response",
                 "request_seq": 35,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00038.516: /handling #32 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 54,
                 "type": "response",
                 "request_seq": 32,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00038.516: Client[1] --> {
                 "seq": 33,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00038.516: /handling #33 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 36,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00038.531: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 108,
                 "type": "response",
                 "request_seq": 36,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 20
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 21
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00038.531: /handling #33 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 55,
                 "type": "response",
                 "request_seq": 33,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 20
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 21
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00038.531: Client[1] --> {
                 "seq": 34,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00038.531: /handling #34 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 37,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00038.531: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 110,
                 "type": "response",
                 "request_seq": 37,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 22
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 23
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00038.531: /handling #34 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 56,
                 "type": "response",
                 "request_seq": 34,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 22
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 23
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00038.938: Client[1] --> {
                 "seq": 35,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00038.938: /handling #35 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 38,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00038.938: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 112,
                 "type": "response",
                 "request_seq": 38,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00038.938: /handling #35 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 57,
                 "type": "response",
                 "request_seq": 35,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00039.141: Client[1] --> {
                 "seq": 36,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00039.141: /handling #36 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 39,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00039.141: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 114,
                 "type": "response",
                 "request_seq": 39,
                 "success": true,
                 "command": "next"
             }

D+00039.141: /handling #36 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 58,
                 "type": "response",
                 "request_seq": 36,
                 "success": true,
                 "command": "next"
             }

D+00039.141: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 116,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00039.141: /handling #116 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 59,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00039.141: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 118,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00039.141: /handling #118 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 60,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00039.156: Client[1] --> {
                 "seq": 37,
                 "type": "request",
                 "command": "threads"
             }

D+00039.156: /handling #37 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 40,
                 "type": "request",
                 "command": "threads"
             }

D+00039.156: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 120,
                 "type": "response",
                 "request_seq": 40,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00039.156: /handling #37 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 61,
                 "type": "response",
                 "request_seq": 37,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00039.156: Client[1] --> {
                 "seq": 38,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00039.156: /handling #38 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 41,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00039.156: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 122,
                 "type": "response",
                 "request_seq": 41,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 136,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00039.156: /handling #38 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 62,
                 "type": "response",
                 "request_seq": 38,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 136,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00039.156: Client[1] --> {
                 "seq": 39,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00039.156: /handling #39 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 42,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00039.156: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 124,
                 "type": "response",
                 "request_seq": 42,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00039.156: /handling #39 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 63,
                 "type": "response",
                 "request_seq": 39,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00039.156: Client[1] --> {
                 "seq": 40,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00039.156: /handling #40 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 43,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00039.156: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 126,
                 "type": "response",
                 "request_seq": 43,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 24
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 25
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00039.156: /handling #40 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 64,
                 "type": "response",
                 "request_seq": 40,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 24
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 25
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00039.156: Client[1] --> {
                 "seq": 41,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00039.156: /handling #41 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 44,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00039.156: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 128,
                 "type": "response",
                 "request_seq": 44,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 26
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 27
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00039.156: /handling #41 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 65,
                 "type": "response",
                 "request_seq": 41,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 26
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 27
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00039.578: Client[1] --> {
                 "seq": 42,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00039.578: /handling #42 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 45,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00039.578: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 130,
                 "type": "response",
                 "request_seq": 45,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00039.578: /handling #42 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 66,
                 "type": "response",
                 "request_seq": 42,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00039.641: Client[1] --> {
                 "seq": 43,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00039.641: /handling #43 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 46,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00039.641: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 132,
                 "type": "response",
                 "request_seq": 46,
                 "success": true,
                 "command": "next"
             }

D+00039.641: /handling #43 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 67,
                 "type": "response",
                 "request_seq": 43,
                 "success": true,
                 "command": "next"
             }

D+00039.641: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 134,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00039.641: /handling #134 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 68,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00039.641: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 136,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00039.641: /handling #136 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 69,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00039.656: Client[1] --> {
                 "seq": 44,
                 "type": "request",
                 "command": "threads"
             }

D+00039.656: /handling #44 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 47,
                 "type": "request",
                 "command": "threads"
             }

D+00039.656: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 138,
                 "type": "response",
                 "request_seq": 47,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00039.656: /handling #44 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 70,
                 "type": "response",
                 "request_seq": 44,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00039.656: Client[1] --> {
                 "seq": 45,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00039.656: /handling #45 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 48,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00039.656: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 140,
                 "type": "response",
                 "request_seq": 48,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 139,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00039.656: /handling #45 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 71,
                 "type": "response",
                 "request_seq": 45,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 139,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00039.656: Client[1] --> {
                 "seq": 46,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00039.656: /handling #46 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 49,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00039.656: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 142,
                 "type": "response",
                 "request_seq": 49,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00039.656: /handling #46 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 72,
                 "type": "response",
                 "request_seq": 46,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00039.656: Client[1] --> {
                 "seq": 47,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00039.656: /handling #47 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 50,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00039.656: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 144,
                 "type": "response",
                 "request_seq": 50,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 28
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 29
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00039.656: /handling #47 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 73,
                 "type": "response",
                 "request_seq": 47,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 28
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 29
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00039.656: Client[1] --> {
                 "seq": 48,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00039.656: /handling #48 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 51,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00039.656: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 146,
                 "type": "response",
                 "request_seq": 51,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 31
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 32
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00039.656: /handling #48 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 74,
                 "type": "response",
                 "request_seq": 48,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 31
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 32
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00040.078: Client[1] --> {
                 "seq": 49,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00040.078: /handling #49 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 52,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00040.078: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 148,
                 "type": "response",
                 "request_seq": 52,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00040.078: /handling #49 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 75,
                 "type": "response",
                 "request_seq": 49,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00040.641: Client[1] --> {
                 "seq": 50,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00040.641: /handling #50 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 53,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00040.641: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 150,
                 "type": "response",
                 "request_seq": 53,
                 "success": true,
                 "command": "next"
             }

D+00040.641: /handling #50 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 76,
                 "type": "response",
                 "request_seq": 50,
                 "success": true,
                 "command": "next"
             }

D+00040.641: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 152,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00040.641: /handling #152 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 77,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00040.641: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 154,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00040.641: /handling #154 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 78,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00040.656: Client[1] --> {
                 "seq": 51,
                 "type": "request",
                 "command": "threads"
             }

D+00040.656: /handling #51 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 54,
                 "type": "request",
                 "command": "threads"
             }

D+00040.656: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 156,
                 "type": "response",
                 "request_seq": 54,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00040.656: /handling #51 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 79,
                 "type": "response",
                 "request_seq": 51,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00040.656: Client[1] --> {
                 "seq": 52,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00040.656: /handling #52 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 55,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00040.656: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 158,
                 "type": "response",
                 "request_seq": 55,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 140,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00040.656: /handling #52 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 80,
                 "type": "response",
                 "request_seq": 52,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 140,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00040.656: Client[1] --> {
                 "seq": 53,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00040.656: /handling #53 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 56,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00040.656: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 160,
                 "type": "response",
                 "request_seq": 56,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00040.656: /handling #53 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 81,
                 "type": "response",
                 "request_seq": 53,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00040.656: Client[1] --> {
                 "seq": 54,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00040.656: /handling #54 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 57,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00040.656: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 162,
                 "type": "response",
                 "request_seq": 57,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 33
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 34
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00040.656: /handling #54 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 82,
                 "type": "response",
                 "request_seq": 54,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 33
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 34
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00040.656: Client[1] --> {
                 "seq": 55,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00040.656: /handling #55 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 58,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00040.656: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 164,
                 "type": "response",
                 "request_seq": 58,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 35
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 36
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00040.656: /handling #55 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 83,
                 "type": "response",
                 "request_seq": 55,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 35
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 36
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00041.078: Client[1] --> {
                 "seq": 56,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00041.078: /handling #56 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 59,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00041.078: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 166,
                 "type": "response",
                 "request_seq": 59,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00041.078: /handling #56 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 84,
                 "type": "response",
                 "request_seq": 56,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00043.828: Client[1] --> {
                 "seq": 57,
                 "type": "request",
                 "command": "evaluate",
                 "arguments": {
                     "expression": "allow",
                     "frameId": 2,
                     "context": "hover",
                     "line": 135,
                     "column": 26,
                     "source": {
                         "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                         "sourceReference": 0
                     }
                 }
             }

D+00043.828: /handling #57 request "evaluate" from Client[1]/
             Server[1] <-- {
                 "seq": 60,
                 "type": "request",
                 "command": "evaluate",
                 "arguments": {
                     "expression": "allow",
                     "frameId": 2,
                     "context": "hover",
                     "line": 135,
                     "column": 26,
                     "source": {
                         "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                         "sourceReference": 0
                     }
                 }
             }

D+00043.828: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 168,
                 "type": "response",
                 "request_seq": 60,
                 "success": false,
                 "command": "evaluate",
                 "message": "Exception occurred during evaluation.",
                 "body": {
                     "result": "",
                     "variablesReference": 0,
                     "presentationHint": {}
                 }
             }

D+00043.828: /handling #168 response to 60 request "evaluate" to Server[1]/
             Client[1] <-- {
                 "seq": 85,
                 "type": "response",
                 "request_seq": 57,
                 "success": false,
                 "command": "evaluate",
                 "message": "Exception occurred during evaluation."
             }

D+00045.172: Client[1] --> {
                 "seq": 58,
                 "type": "request",
                 "command": "evaluate",
                 "arguments": {
                     "expression": "allow",
                     "frameId": 2,
                     "context": "hover",
                     "line": 135,
                     "column": 26,
                     "source": {
                         "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                         "sourceReference": 0
                     }
                 }
             }

D+00045.172: /handling #58 request "evaluate" from Client[1]/
             Server[1] <-- {
                 "seq": 61,
                 "type": "request",
                 "command": "evaluate",
                 "arguments": {
                     "expression": "allow",
                     "frameId": 2,
                     "context": "hover",
                     "line": 135,
                     "column": 26,
                     "source": {
                         "path": "c:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                         "sourceReference": 0
                     }
                 }
             }

D+00045.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 170,
                 "type": "response",
                 "request_seq": 61,
                 "success": false,
                 "command": "evaluate",
                 "message": "Exception occurred during evaluation.",
                 "body": {
                     "result": "",
                     "variablesReference": 0,
                     "presentationHint": {}
                 }
             }

D+00045.172: /handling #170 response to 61 request "evaluate" to Server[1]/
             Client[1] <-- {
                 "seq": 86,
                 "type": "response",
                 "request_seq": 58,
                 "success": false,
                 "command": "evaluate",
                 "message": "Exception occurred during evaluation."
             }

D+00045.563: Client[1] --> {
                 "seq": 59,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00045.563: /handling #59 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 62,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00045.563: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 172,
                 "type": "response",
                 "request_seq": 62,
                 "success": true,
                 "command": "next"
             }

D+00045.563: /handling #59 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 87,
                 "type": "response",
                 "request_seq": 59,
                 "success": true,
                 "command": "next"
             }

D+00045.563: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 174,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00045.563: /handling #174 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 88,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00045.563: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 176,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00045.563: /handling #176 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 89,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00045.563: Client[1] --> {
                 "seq": 60,
                 "type": "request",
                 "command": "threads"
             }

D+00045.563: /handling #60 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 63,
                 "type": "request",
                 "command": "threads"
             }

D+00045.563: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 178,
                 "type": "response",
                 "request_seq": 63,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00045.563: /handling #60 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 90,
                 "type": "response",
                 "request_seq": 60,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00045.563: Client[1] --> {
                 "seq": 61,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00045.578: /handling #61 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 64,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00045.578: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 180,
                 "type": "response",
                 "request_seq": 64,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 141,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00045.578: /handling #61 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 91,
                 "type": "response",
                 "request_seq": 61,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 141,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00045.578: Client[1] --> {
                 "seq": 62,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00045.578: /handling #62 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 65,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00045.578: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 182,
                 "type": "response",
                 "request_seq": 65,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00045.578: /handling #62 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 92,
                 "type": "response",
                 "request_seq": 62,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00045.578: Client[1] --> {
                 "seq": 63,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00045.578: /handling #63 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 66,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00045.578: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 184,
                 "type": "response",
                 "request_seq": 66,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 37
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 38
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00045.578: /handling #63 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 93,
                 "type": "response",
                 "request_seq": 63,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 37
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 38
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00045.578: Client[1] --> {
                 "seq": 64,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00045.578: /handling #64 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 67,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00045.578: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 186,
                 "type": "response",
                 "request_seq": 67,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 39
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 40
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00045.578: /handling #64 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 94,
                 "type": "response",
                 "request_seq": 64,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 39
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 40
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00046.000: Client[1] --> {
                 "seq": 65,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00046.000: /handling #65 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 68,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00046.000: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 188,
                 "type": "response",
                 "request_seq": 68,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00046.000: /handling #65 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 95,
                 "type": "response",
                 "request_seq": 65,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00047.688: Client[1] --> {
                 "seq": 66,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00047.688: /handling #66 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 69,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00047.688: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 190,
                 "type": "response",
                 "request_seq": 69,
                 "success": true,
                 "command": "next"
             }

D+00047.688: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 192,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00047.688: /handling #66 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 96,
                 "type": "response",
                 "request_seq": 66,
                 "success": true,
                 "command": "next"
             }

D+00047.688: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 194,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00047.688: /handling #192 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 97,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00047.688: /handling #194 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 98,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00047.688: Client[1] --> {
                 "seq": 67,
                 "type": "request",
                 "command": "threads"
             }

D+00047.688: /handling #67 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 70,
                 "type": "request",
                 "command": "threads"
             }

D+00047.688: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 196,
                 "type": "response",
                 "request_seq": 70,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00047.688: /handling #67 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 99,
                 "type": "response",
                 "request_seq": 67,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00047.688: Client[1] --> {
                 "seq": 68,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00047.688: /handling #68 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 71,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00047.688: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 198,
                 "type": "response",
                 "request_seq": 71,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 142,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00047.688: /handling #68 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 100,
                 "type": "response",
                 "request_seq": 68,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 142,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00047.703: Client[1] --> {
                 "seq": 69,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00047.703: /handling #69 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 72,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00047.703: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 200,
                 "type": "response",
                 "request_seq": 72,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00047.703: /handling #69 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 101,
                 "type": "response",
                 "request_seq": 69,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00047.703: Client[1] --> {
                 "seq": 70,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00047.703: /handling #70 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 73,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00047.703: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 202,
                 "type": "response",
                 "request_seq": 73,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 41
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 42
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00047.703: /handling #70 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 102,
                 "type": "response",
                 "request_seq": 70,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 41
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 42
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00047.703: Client[1] --> {
                 "seq": 71,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00047.703: /handling #71 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 74,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00047.703: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 204,
                 "type": "response",
                 "request_seq": 74,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 43
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 44
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00047.703: /handling #71 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 103,
                 "type": "response",
                 "request_seq": 71,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 43
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 44
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00048.109: Client[1] --> {
                 "seq": 72,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00048.109: /handling #72 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 75,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00048.109: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 206,
                 "type": "response",
                 "request_seq": 75,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00048.109: /handling #72 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 104,
                 "type": "response",
                 "request_seq": 72,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00051.156: Client[1] --> {
                 "seq": 73,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00051.156: /handling #73 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 76,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00051.156: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 208,
                 "type": "response",
                 "request_seq": 76,
                 "success": true,
                 "command": "next"
             }

D+00051.156: /handling #73 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 105,
                 "type": "response",
                 "request_seq": 73,
                 "success": true,
                 "command": "next"
             }

D+00051.156: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 210,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00051.156: /handling #210 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 106,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00051.156: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 212,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00051.156: /handling #212 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 107,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00051.172: Client[1] --> {
                 "seq": 74,
                 "type": "request",
                 "command": "threads"
             }

D+00051.172: /handling #74 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 77,
                 "type": "request",
                 "command": "threads"
             }

D+00051.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 214,
                 "type": "response",
                 "request_seq": 77,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00051.172: /handling #74 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 108,
                 "type": "response",
                 "request_seq": 74,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00051.172: Client[1] --> {
                 "seq": 75,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00051.172: /handling #75 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 78,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00051.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 216,
                 "type": "response",
                 "request_seq": 78,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 143,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00051.172: /handling #75 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 109,
                 "type": "response",
                 "request_seq": 75,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 143,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00051.172: Client[1] --> {
                 "seq": 76,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00051.172: /handling #76 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 79,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00051.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 218,
                 "type": "response",
                 "request_seq": 79,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00051.172: /handling #76 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 110,
                 "type": "response",
                 "request_seq": 76,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00051.172: Client[1] --> {
                 "seq": 77,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00051.172: /handling #77 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 80,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00051.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 220,
                 "type": "response",
                 "request_seq": 80,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 45
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 46
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00051.172: /handling #77 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 111,
                 "type": "response",
                 "request_seq": 77,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 45
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 46
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00051.172: Client[1] --> {
                 "seq": 78,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00051.172: /handling #78 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 81,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00051.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 222,
                 "type": "response",
                 "request_seq": 81,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 47
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 48
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00051.172: /handling #78 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 112,
                 "type": "response",
                 "request_seq": 78,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 47
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 48
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00051.594: Client[1] --> {
                 "seq": 79,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00051.594: /handling #79 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 82,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00051.594: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 224,
                 "type": "response",
                 "request_seq": 82,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00051.594: /handling #79 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 113,
                 "type": "response",
                 "request_seq": 79,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00051.891: Client[1] --> {
                 "seq": 80,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00051.891: /handling #80 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 83,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00051.891: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 226,
                 "type": "response",
                 "request_seq": 83,
                 "success": true,
                 "command": "next"
             }

D+00051.891: /handling #80 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 114,
                 "type": "response",
                 "request_seq": 80,
                 "success": true,
                 "command": "next"
             }

D+00051.891: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 228,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00051.891: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 230,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00051.891: /handling #228 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 115,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00051.891: /handling #230 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 116,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00051.891: Client[1] --> {
                 "seq": 81,
                 "type": "request",
                 "command": "threads"
             }

D+00051.891: /handling #81 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 84,
                 "type": "request",
                 "command": "threads"
             }

D+00051.891: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 232,
                 "type": "response",
                 "request_seq": 84,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00051.891: /handling #81 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 117,
                 "type": "response",
                 "request_seq": 81,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00051.891: Client[1] --> {
                 "seq": 82,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00051.891: /handling #82 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 85,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00051.891: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 234,
                 "type": "response",
                 "request_seq": 85,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 139,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00051.906: /handling #82 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 118,
                 "type": "response",
                 "request_seq": 82,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 139,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00051.906: Client[1] --> {
                 "seq": 83,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00051.906: /handling #83 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 86,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00051.906: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 236,
                 "type": "response",
                 "request_seq": 86,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00051.906: /handling #83 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 119,
                 "type": "response",
                 "request_seq": 83,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00051.906: Client[1] --> {
                 "seq": 84,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00051.906: /handling #84 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 87,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00051.906: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 238,
                 "type": "response",
                 "request_seq": 87,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 49
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 50
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00051.906: /handling #84 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 120,
                 "type": "response",
                 "request_seq": 84,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 49
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 50
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00051.906: Client[1] --> {
                 "seq": 85,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00051.906: /handling #85 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 88,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00051.906: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 240,
                 "type": "response",
                 "request_seq": 88,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 51
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 52
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00051.906: /handling #85 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 121,
                 "type": "response",
                 "request_seq": 85,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 51
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 52
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00052.328: Client[1] --> {
                 "seq": 86,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00052.328: /handling #86 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 89,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00052.328: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 242,
                 "type": "response",
                 "request_seq": 89,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00052.328: /handling #86 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 122,
                 "type": "response",
                 "request_seq": 86,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00052.469: Client[1] --> {
                 "seq": 87,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00052.469: /handling #87 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 90,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00052.469: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 244,
                 "type": "response",
                 "request_seq": 90,
                 "success": true,
                 "command": "next"
             }

D+00052.469: /handling #87 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 123,
                 "type": "response",
                 "request_seq": 87,
                 "success": true,
                 "command": "next"
             }

D+00052.469: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 246,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00052.469: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 248,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00052.469: /handling #246 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 124,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00052.469: /handling #248 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 125,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00052.484: Client[1] --> {
                 "seq": 88,
                 "type": "request",
                 "command": "threads"
             }

D+00052.484: /handling #88 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 91,
                 "type": "request",
                 "command": "threads"
             }

D+00052.484: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 250,
                 "type": "response",
                 "request_seq": 91,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00052.484: /handling #88 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 126,
                 "type": "response",
                 "request_seq": 88,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00052.484: Client[1] --> {
                 "seq": 89,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00052.484: /handling #89 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 92,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00052.484: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 252,
                 "type": "response",
                 "request_seq": 92,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 145,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00052.484: /handling #89 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 127,
                 "type": "response",
                 "request_seq": 89,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 145,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00052.484: Client[1] --> {
                 "seq": 90,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00052.484: /handling #90 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 93,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00052.484: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 254,
                 "type": "response",
                 "request_seq": 93,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00052.484: /handling #90 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 128,
                 "type": "response",
                 "request_seq": 90,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00052.484: Client[1] --> {
                 "seq": 91,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00052.484: /handling #91 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 94,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00052.484: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 256,
                 "type": "response",
                 "request_seq": 94,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 53
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 32
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00052.484: /handling #91 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 129,
                 "type": "response",
                 "request_seq": 91,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 53
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 32
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00052.500: Client[1] --> {
                 "seq": 92,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00052.500: /handling #92 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 95,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00052.500: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 258,
                 "type": "response",
                 "request_seq": 95,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 55
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 56
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00052.500: /handling #92 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 130,
                 "type": "response",
                 "request_seq": 92,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 55
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 56
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00052.906: Client[1] --> {
                 "seq": 93,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00052.906: /handling #93 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 96,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00052.906: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 260,
                 "type": "response",
                 "request_seq": 96,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00052.906: /handling #93 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 131,
                 "type": "response",
                 "request_seq": 93,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00055.406: Client[1] --> {
                 "seq": 94,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00055.406: /handling #94 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 97,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00055.406: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 262,
                 "type": "response",
                 "request_seq": 97,
                 "success": true,
                 "command": "next"
             }

D+00055.406: /handling #94 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 132,
                 "type": "response",
                 "request_seq": 94,
                 "success": true,
                 "command": "next"
             }

D+00055.406: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 264,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00055.406: /handling #264 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 133,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00055.406: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 266,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00055.406: /handling #266 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 134,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00055.406: Client[1] --> {
                 "seq": 95,
                 "type": "request",
                 "command": "threads"
             }

D+00055.406: /handling #95 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 98,
                 "type": "request",
                 "command": "threads"
             }

D+00055.406: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 268,
                 "type": "response",
                 "request_seq": 98,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00055.406: /handling #95 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 135,
                 "type": "response",
                 "request_seq": 95,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00055.406: Client[1] --> {
                 "seq": 96,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00055.406: /handling #96 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 99,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00055.406: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 270,
                 "type": "response",
                 "request_seq": 99,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 146,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00055.406: /handling #96 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 136,
                 "type": "response",
                 "request_seq": 96,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 146,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00055.422: Client[1] --> {
                 "seq": 97,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00055.422: /handling #97 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 100,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00055.422: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 272,
                 "type": "response",
                 "request_seq": 100,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00055.422: /handling #97 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 137,
                 "type": "response",
                 "request_seq": 97,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00055.422: Client[1] --> {
                 "seq": 98,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00055.422: /handling #98 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 101,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00055.422: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 274,
                 "type": "response",
                 "request_seq": 101,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 57
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 58
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00055.422: /handling #98 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 138,
                 "type": "response",
                 "request_seq": 98,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 57
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 58
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00055.422: Client[1] --> {
                 "seq": 99,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00055.422: /handling #99 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 102,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00055.422: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 276,
                 "type": "response",
                 "request_seq": 102,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 59
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 60
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00055.422: /handling #99 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 139,
                 "type": "response",
                 "request_seq": 99,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 59
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 60
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00055.766: Client[1] --> {
                 "seq": 100,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00055.766: /handling #100 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 103,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00055.766: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 278,
                 "type": "response",
                 "request_seq": 103,
                 "success": true,
                 "command": "next"
             }

D+00055.766: /handling #100 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 140,
                 "type": "response",
                 "request_seq": 100,
                 "success": true,
                 "command": "next"
             }

D+00055.766: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 280,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00055.766: /handling #280 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 141,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00055.766: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 282,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00055.766: /handling #282 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 142,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00055.766: Client[1] --> {
                 "seq": 101,
                 "type": "request",
                 "command": "threads"
             }

D+00055.766: /handling #101 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 104,
                 "type": "request",
                 "command": "threads"
             }

D+00055.766: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 284,
                 "type": "response",
                 "request_seq": 104,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00055.766: /handling #101 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 143,
                 "type": "response",
                 "request_seq": 101,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00055.766: Client[1] --> {
                 "seq": 102,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00055.766: /handling #102 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 105,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00055.766: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 286,
                 "type": "response",
                 "request_seq": 105,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 147,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00055.766: /handling #102 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 144,
                 "type": "response",
                 "request_seq": 102,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 147,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00055.781: Client[1] --> {
                 "seq": 103,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00055.781: /handling #103 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 106,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00055.781: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 288,
                 "type": "response",
                 "request_seq": 106,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00055.781: /handling #103 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 145,
                 "type": "response",
                 "request_seq": 103,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00055.781: Client[1] --> {
                 "seq": 104,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00055.781: /handling #104 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 107,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00055.781: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 290,
                 "type": "response",
                 "request_seq": 107,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 27
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 61
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00055.781: /handling #104 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 146,
                 "type": "response",
                 "request_seq": 104,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 27
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 61
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00055.781: Client[1] --> {
                 "seq": 105,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00055.781: /handling #105 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 108,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00055.781: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 292,
                 "type": "response",
                 "request_seq": 108,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 59
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 62
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00055.781: /handling #105 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 147,
                 "type": "response",
                 "request_seq": 105,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 59
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 62
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.063: Client[1] --> {
                 "seq": 106,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00056.063: /handling #106 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 109,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00056.063: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 294,
                 "type": "response",
                 "request_seq": 109,
                 "success": true,
                 "command": "next"
             }

D+00056.063: /handling #106 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 148,
                 "type": "response",
                 "request_seq": 106,
                 "success": true,
                 "command": "next"
             }

D+00056.063: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 296,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00056.063: /handling #296 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 149,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00056.063: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 298,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00056.063: /handling #298 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 150,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00056.063: Client[1] --> {
                 "seq": 107,
                 "type": "request",
                 "command": "threads"
             }

D+00056.063: /handling #107 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 110,
                 "type": "request",
                 "command": "threads"
             }

D+00056.063: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 300,
                 "type": "response",
                 "request_seq": 110,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00056.063: /handling #107 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 151,
                 "type": "response",
                 "request_seq": 107,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00056.063: Client[1] --> {
                 "seq": 108,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00056.063: /handling #108 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 111,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00056.063: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 302,
                 "type": "response",
                 "request_seq": 111,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 148,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00056.063: /handling #108 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 152,
                 "type": "response",
                 "request_seq": 108,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 148,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00056.063: Client[1] --> {
                 "seq": 109,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00056.063: /handling #109 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 112,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00056.063: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 304,
                 "type": "response",
                 "request_seq": 112,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00056.078: /handling #109 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 153,
                 "type": "response",
                 "request_seq": 109,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00056.078: Client[1] --> {
                 "seq": 110,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00056.078: /handling #110 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 113,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00056.078: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 306,
                 "type": "response",
                 "request_seq": 113,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 63
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 64
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.078: /handling #110 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 154,
                 "type": "response",
                 "request_seq": 110,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 63
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 64
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.078: Client[1] --> {
                 "seq": 111,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00056.078: /handling #111 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 114,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00056.078: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 308,
                 "type": "response",
                 "request_seq": 114,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 65
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 66
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.078: /handling #111 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 155,
                 "type": "response",
                 "request_seq": 111,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 65
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 66
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.359: Client[1] --> {
                 "seq": 112,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00056.359: /handling #112 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 115,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00056.375: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 310,
                 "type": "response",
                 "request_seq": 115,
                 "success": true,
                 "command": "next"
             }

D+00056.375: /handling #112 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 156,
                 "type": "response",
                 "request_seq": 112,
                 "success": true,
                 "command": "next"
             }

D+00056.375: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 312,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00056.375: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 314,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00056.375: /handling #312 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 157,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00056.375: /handling #314 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 158,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00056.375: Client[1] --> {
                 "seq": 113,
                 "type": "request",
                 "command": "threads"
             }

D+00056.375: /handling #113 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 116,
                 "type": "request",
                 "command": "threads"
             }

D+00056.375: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 316,
                 "type": "response",
                 "request_seq": 116,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00056.375: /handling #113 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 159,
                 "type": "response",
                 "request_seq": 113,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00056.375: Client[1] --> {
                 "seq": 114,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00056.375: /handling #114 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 117,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00056.375: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 318,
                 "type": "response",
                 "request_seq": 117,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 149,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00056.375: /handling #114 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 160,
                 "type": "response",
                 "request_seq": 114,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 149,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00056.391: Client[1] --> {
                 "seq": 115,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00056.391: /handling #115 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 118,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00056.391: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 320,
                 "type": "response",
                 "request_seq": 118,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00056.391: /handling #115 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 161,
                 "type": "response",
                 "request_seq": 115,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00056.391: Client[1] --> {
                 "seq": 116,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00056.391: /handling #116 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 119,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00056.391: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 322,
                 "type": "response",
                 "request_seq": 119,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 67
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 68
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.391: /handling #116 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 162,
                 "type": "response",
                 "request_seq": 116,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 67
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 68
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.391: Client[1] --> {
                 "seq": 117,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00056.391: /handling #117 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 120,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00056.391: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 324,
                 "type": "response",
                 "request_seq": 120,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 69
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 70
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.391: /handling #117 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 163,
                 "type": "response",
                 "request_seq": 117,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 69
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 70
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.703: Client[1] --> {
                 "seq": 118,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00056.703: /handling #118 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 121,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00056.703: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 326,
                 "type": "response",
                 "request_seq": 121,
                 "success": true,
                 "command": "next"
             }

D+00056.703: /handling #118 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 164,
                 "type": "response",
                 "request_seq": 118,
                 "success": true,
                 "command": "next"
             }

D+00056.703: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 328,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00056.703: /handling #328 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 165,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00056.703: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 330,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00056.703: /handling #330 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 166,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00056.703: Client[1] --> {
                 "seq": 119,
                 "type": "request",
                 "command": "threads"
             }

D+00056.719: /handling #119 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 122,
                 "type": "request",
                 "command": "threads"
             }

D+00056.719: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 332,
                 "type": "response",
                 "request_seq": 122,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00056.719: /handling #119 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 167,
                 "type": "response",
                 "request_seq": 119,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00056.719: Client[1] --> {
                 "seq": 120,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00056.719: /handling #120 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 123,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00056.719: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 334,
                 "type": "response",
                 "request_seq": 123,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 145,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00056.719: /handling #120 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 168,
                 "type": "response",
                 "request_seq": 120,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 145,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00056.719: Client[1] --> {
                 "seq": 121,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00056.719: /handling #121 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 124,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00056.719: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 336,
                 "type": "response",
                 "request_seq": 124,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00056.719: /handling #121 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 169,
                 "type": "response",
                 "request_seq": 121,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00056.719: Client[1] --> {
                 "seq": 122,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00056.719: /handling #122 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 125,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00056.734: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 338,
                 "type": "response",
                 "request_seq": 125,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 71
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 65
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.734: /handling #122 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 170,
                 "type": "response",
                 "request_seq": 122,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 71
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 65
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.734: Client[1] --> {
                 "seq": 123,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00056.734: /handling #123 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 126,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00056.734: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 340,
                 "type": "response",
                 "request_seq": 126,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 72
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 73
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00056.734: /handling #123 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 171,
                 "type": "response",
                 "request_seq": 123,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 72
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 73
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-db'], dest='db', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run DB test variant (1..3) and pass the number to _run_db_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 54,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.094: Client[1] --> {
                 "seq": 124,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00057.094: /handling #124 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 127,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00057.094: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 342,
                 "type": "response",
                 "request_seq": 127,
                 "success": true,
                 "command": "next"
             }

D+00057.094: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 344,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00057.094: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 346,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00057.094: /handling #124 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 172,
                 "type": "response",
                 "request_seq": 124,
                 "success": true,
                 "command": "next"
             }

D+00057.094: /handling #344 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 173,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00057.094: /handling #346 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 174,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00057.094: Client[1] --> {
                 "seq": 125,
                 "type": "request",
                 "command": "threads"
             }

D+00057.094: /handling #125 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 128,
                 "type": "request",
                 "command": "threads"
             }

D+00057.094: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 348,
                 "type": "response",
                 "request_seq": 128,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00057.094: /handling #125 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 175,
                 "type": "response",
                 "request_seq": 125,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00057.094: Client[1] --> {
                 "seq": 126,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00057.094: /handling #126 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 129,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00057.094: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 350,
                 "type": "response",
                 "request_seq": 129,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 151,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00057.094: /handling #126 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 176,
                 "type": "response",
                 "request_seq": 126,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 151,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00057.094: Client[1] --> {
                 "seq": 127,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00057.094: /handling #127 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 130,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00057.109: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 352,
                 "type": "response",
                 "request_seq": 130,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00057.109: /handling #127 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 177,
                 "type": "response",
                 "request_seq": 127,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00057.109: Client[1] --> {
                 "seq": 128,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00057.109: /handling #128 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 131,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00057.109: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 354,
                 "type": "response",
                 "request_seq": 131,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 74
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 61
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.109: /handling #128 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 178,
                 "type": "response",
                 "request_seq": 128,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 74
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 61
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.109: Client[1] --> {
                 "seq": 129,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00057.109: /handling #129 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 132,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00057.109: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 356,
                 "type": "response",
                 "request_seq": 132,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 76
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 77
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.109: /handling #129 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 179,
                 "type": "response",
                 "request_seq": 129,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 76
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 77
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.469: Client[1] --> {
                 "seq": 130,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00057.469: /handling #130 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 133,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00057.469: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 358,
                 "type": "response",
                 "request_seq": 133,
                 "success": true,
                 "command": "next"
             }

D+00057.469: /handling #130 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 180,
                 "type": "response",
                 "request_seq": 130,
                 "success": true,
                 "command": "next"
             }

D+00057.469: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 360,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00057.469: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 362,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00057.469: /handling #360 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 181,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00057.469: /handling #362 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 182,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00057.469: Client[1] --> {
                 "seq": 131,
                 "type": "request",
                 "command": "threads"
             }

D+00057.469: /handling #131 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 134,
                 "type": "request",
                 "command": "threads"
             }

D+00057.469: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 364,
                 "type": "response",
                 "request_seq": 134,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00057.469: /handling #131 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 183,
                 "type": "response",
                 "request_seq": 131,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00057.469: Client[1] --> {
                 "seq": 132,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00057.469: /handling #132 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 135,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00057.469: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 366,
                 "type": "response",
                 "request_seq": 135,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 152,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00057.469: /handling #132 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 184,
                 "type": "response",
                 "request_seq": 132,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 152,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00057.484: Client[1] --> {
                 "seq": 133,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00057.484: /handling #133 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 136,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00057.484: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 368,
                 "type": "response",
                 "request_seq": 136,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00057.484: /handling #133 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 185,
                 "type": "response",
                 "request_seq": 133,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00057.484: Client[1] --> {
                 "seq": 134,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00057.484: /handling #134 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 137,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00057.484: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 370,
                 "type": "response",
                 "request_seq": 137,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 78
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 79
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.484: /handling #134 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 186,
                 "type": "response",
                 "request_seq": 134,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 78
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 79
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.484: Client[1] --> {
                 "seq": 135,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00057.484: /handling #135 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 138,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00057.484: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 372,
                 "type": "response",
                 "request_seq": 138,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 80
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 81
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.484: /handling #135 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 187,
                 "type": "response",
                 "request_seq": 135,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 80
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 81
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.781: Client[1] --> {
                 "seq": 136,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00057.781: /handling #136 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 139,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00057.781: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 374,
                 "type": "response",
                 "request_seq": 139,
                 "success": true,
                 "command": "next"
             }

D+00057.781: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 376,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00057.781: /handling #136 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 188,
                 "type": "response",
                 "request_seq": 136,
                 "success": true,
                 "command": "next"
             }

D+00057.781: /handling #376 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 189,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00057.781: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 378,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00057.781: /handling #378 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 190,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00057.797: Client[1] --> {
                 "seq": 137,
                 "type": "request",
                 "command": "threads"
             }

D+00057.797: /handling #137 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 140,
                 "type": "request",
                 "command": "threads"
             }

D+00057.797: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 380,
                 "type": "response",
                 "request_seq": 140,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00057.797: /handling #137 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 191,
                 "type": "response",
                 "request_seq": 137,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00057.797: Client[1] --> {
                 "seq": 138,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00057.797: /handling #138 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 141,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00057.797: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 382,
                 "type": "response",
                 "request_seq": 141,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 153,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00057.797: /handling #138 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 192,
                 "type": "response",
                 "request_seq": 138,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 153,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00057.797: Client[1] --> {
                 "seq": 139,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00057.797: /handling #139 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 142,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00057.797: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 384,
                 "type": "response",
                 "request_seq": 142,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00057.797: /handling #139 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 193,
                 "type": "response",
                 "request_seq": 139,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00057.813: Client[1] --> {
                 "seq": 140,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00057.813: /handling #140 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 143,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00057.813: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 386,
                 "type": "response",
                 "request_seq": 143,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 82
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 83
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.813: /handling #140 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 194,
                 "type": "response",
                 "request_seq": 140,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 82
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 83
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.813: Client[1] --> {
                 "seq": 141,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00057.813: /handling #141 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 144,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00057.813: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 388,
                 "type": "response",
                 "request_seq": 144,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 84
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 85
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00057.813: /handling #141 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 195,
                 "type": "response",
                 "request_seq": 141,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 84
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 85
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.063: Client[1] --> {
                 "seq": 142,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00058.063: /handling #142 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 145,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00058.063: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 390,
                 "type": "response",
                 "request_seq": 145,
                 "success": true,
                 "command": "next"
             }

D+00058.063: /handling #142 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 196,
                 "type": "response",
                 "request_seq": 142,
                 "success": true,
                 "command": "next"
             }

D+00058.063: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 392,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00058.063: /handling #392 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 197,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00058.063: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 394,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00058.063: /handling #394 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 198,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00058.063: Client[1] --> {
                 "seq": 143,
                 "type": "request",
                 "command": "threads"
             }

D+00058.063: /handling #143 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 146,
                 "type": "request",
                 "command": "threads"
             }

D+00058.063: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 396,
                 "type": "response",
                 "request_seq": 146,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00058.063: /handling #143 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 199,
                 "type": "response",
                 "request_seq": 143,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00058.063: Client[1] --> {
                 "seq": 144,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00058.063: /handling #144 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 147,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00058.063: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 398,
                 "type": "response",
                 "request_seq": 147,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 154,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00058.063: /handling #144 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 200,
                 "type": "response",
                 "request_seq": 144,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 154,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00058.078: Client[1] --> {
                 "seq": 145,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00058.078: /handling #145 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 148,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00058.078: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 400,
                 "type": "response",
                 "request_seq": 148,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00058.078: /handling #145 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 201,
                 "type": "response",
                 "request_seq": 145,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00058.078: Client[1] --> {
                 "seq": 146,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00058.078: /handling #146 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 149,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00058.078: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 402,
                 "type": "response",
                 "request_seq": 149,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 84
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 83
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.078: /handling #146 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 202,
                 "type": "response",
                 "request_seq": 146,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 84
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 83
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.078: Client[1] --> {
                 "seq": 147,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00058.078: /handling #147 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 150,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00058.078: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 404,
                 "type": "response",
                 "request_seq": 150,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 86
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 87
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.078: /handling #147 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 203,
                 "type": "response",
                 "request_seq": 147,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 86
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 87
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.438: Client[1] --> {
                 "seq": 148,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00058.438: /handling #148 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 151,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00058.438: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 406,
                 "type": "response",
                 "request_seq": 151,
                 "success": true,
                 "command": "next"
             }

D+00058.438: /handling #148 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 204,
                 "type": "response",
                 "request_seq": 148,
                 "success": true,
                 "command": "next"
             }

D+00058.438: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 408,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00058.438: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 410,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00058.438: /handling #408 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 205,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00058.438: /handling #410 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 206,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00058.438: Client[1] --> {
                 "seq": 149,
                 "type": "request",
                 "command": "threads"
             }

D+00058.438: /handling #149 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 152,
                 "type": "request",
                 "command": "threads"
             }

D+00058.438: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 412,
                 "type": "response",
                 "request_seq": 152,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00058.438: /handling #149 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 207,
                 "type": "response",
                 "request_seq": 149,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00058.438: Client[1] --> {
                 "seq": 150,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00058.438: /handling #150 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 153,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00058.438: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 414,
                 "type": "response",
                 "request_seq": 153,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 155,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00058.438: /handling #150 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 208,
                 "type": "response",
                 "request_seq": 150,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 155,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00058.453: Client[1] --> {
                 "seq": 151,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00058.453: /handling #151 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 154,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00058.453: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 416,
                 "type": "response",
                 "request_seq": 154,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00058.453: /handling #151 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 209,
                 "type": "response",
                 "request_seq": 151,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00058.453: Client[1] --> {
                 "seq": 152,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00058.453: /handling #152 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 155,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00058.453: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 418,
                 "type": "response",
                 "request_seq": 155,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 88
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 89
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.453: /handling #152 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 210,
                 "type": "response",
                 "request_seq": 152,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 88
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 89
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.453: Client[1] --> {
                 "seq": 153,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00058.453: /handling #153 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 156,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00058.453: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 420,
                 "type": "response",
                 "request_seq": 156,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 73
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 90
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.453: /handling #153 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 211,
                 "type": "response",
                 "request_seq": 153,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 73
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 90
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.859: Client[1] --> {
                 "seq": 154,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00058.859: Client[1] --> {
                 "seq": 155,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00058.859: /handling #154 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 157,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00058.859: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 422,
                 "type": "response",
                 "request_seq": 157,
                 "success": true,
                 "command": "next"
             }

D+00058.859: /handling #154 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 212,
                 "type": "response",
                 "request_seq": 154,
                 "success": true,
                 "command": "next"
             }

D+00058.859: /handling #155 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 158,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00058.859: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 424,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00058.859: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 426,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00058.859: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 428,
                 "type": "response",
                 "request_seq": 158,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00058.859: /handling #155 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 213,
                 "type": "response",
                 "request_seq": 155,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00058.859: /handling #424 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 214,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00058.859: /handling #426 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 215,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00058.875: Client[1] --> {
                 "seq": 156,
                 "type": "request",
                 "command": "threads"
             }

D+00058.875: /handling #156 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 159,
                 "type": "request",
                 "command": "threads"
             }

D+00058.875: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 430,
                 "type": "response",
                 "request_seq": 159,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00058.875: /handling #156 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 216,
                 "type": "response",
                 "request_seq": 156,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00058.875: Client[1] --> {
                 "seq": 157,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00058.875: /handling #157 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 160,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00058.875: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 432,
                 "type": "response",
                 "request_seq": 160,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 151,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00058.875: /handling #157 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 217,
                 "type": "response",
                 "request_seq": 157,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 151,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00058.875: Client[1] --> {
                 "seq": 158,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00058.875: /handling #158 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 161,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00058.875: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 434,
                 "type": "response",
                 "request_seq": 161,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00058.875: /handling #158 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 218,
                 "type": "response",
                 "request_seq": 158,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00058.875: Client[1] --> {
                 "seq": 159,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00058.875: /handling #159 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 162,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00058.875: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 436,
                 "type": "response",
                 "request_seq": 162,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 91
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 92
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.875: /handling #159 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 219,
                 "type": "response",
                 "request_seq": 159,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 91
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 92
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.875: Client[1] --> {
                 "seq": 160,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00058.875: /handling #160 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 163,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00058.875: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 438,
                 "type": "response",
                 "request_seq": 163,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 93
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 94
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00058.875: /handling #160 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 220,
                 "type": "response",
                 "request_seq": 160,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 93
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 94
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ai'], dest='ai', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run AI test variant (1..3) and pass the number to _run_ai_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 75,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00059.297: Client[1] --> {
                 "seq": 161,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00059.297: /handling #161 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 164,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00059.297: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 440,
                 "type": "response",
                 "request_seq": 164,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00059.297: /handling #161 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 221,
                 "type": "response",
                 "request_seq": 161,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00059.313: Client[1] --> {
                 "seq": 162,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00059.313: /handling #162 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 165,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00059.328: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 442,
                 "type": "response",
                 "request_seq": 165,
                 "success": true,
                 "command": "next"
             }

D+00059.328: /handling #162 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 222,
                 "type": "response",
                 "request_seq": 162,
                 "success": true,
                 "command": "next"
             }

D+00059.328: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 444,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00059.328: /handling #444 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 223,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00059.328: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 446,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00059.328: /handling #446 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 224,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00059.328: Client[1] --> {
                 "seq": 163,
                 "type": "request",
                 "command": "threads"
             }

D+00059.328: /handling #163 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 166,
                 "type": "request",
                 "command": "threads"
             }

D+00059.328: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 448,
                 "type": "response",
                 "request_seq": 166,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00059.328: /handling #163 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 225,
                 "type": "response",
                 "request_seq": 163,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00059.328: Client[1] --> {
                 "seq": 164,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00059.328: /handling #164 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 167,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00059.328: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 450,
                 "type": "response",
                 "request_seq": 167,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 157,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00059.328: /handling #164 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 226,
                 "type": "response",
                 "request_seq": 164,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 157,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00059.328: Client[1] --> {
                 "seq": 165,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00059.328: /handling #165 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 168,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00059.328: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 452,
                 "type": "response",
                 "request_seq": 168,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00059.328: /handling #165 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 227,
                 "type": "response",
                 "request_seq": 165,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00059.328: Client[1] --> {
                 "seq": 166,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00059.344: /handling #166 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 169,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00059.344: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 454,
                 "type": "response",
                 "request_seq": 169,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 95
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 80
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00059.344: /handling #166 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 228,
                 "type": "response",
                 "request_seq": 166,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 95
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 80
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00059.344: Client[1] --> {
                 "seq": 167,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00059.344: /handling #167 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 170,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00059.344: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 456,
                 "type": "response",
                 "request_seq": 170,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 97
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 98
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00059.344: /handling #167 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 229,
                 "type": "response",
                 "request_seq": 167,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 97
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 98
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00059.750: Client[1] --> {
                 "seq": 168,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00059.750: /handling #168 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 171,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00059.750: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 458,
                 "type": "response",
                 "request_seq": 171,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00059.750: /handling #168 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 230,
                 "type": "response",
                 "request_seq": 168,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00059.797: Client[1] --> {
                 "seq": 169,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00059.797: /handling #169 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 172,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00059.797: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 460,
                 "type": "response",
                 "request_seq": 172,
                 "success": true,
                 "command": "next"
             }

D+00059.797: /handling #169 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 231,
                 "type": "response",
                 "request_seq": 169,
                 "success": true,
                 "command": "next"
             }

D+00059.797: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 462,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00059.797: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 464,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00059.797: /handling #462 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 232,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00059.797: /handling #464 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 233,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00059.813: Client[1] --> {
                 "seq": 170,
                 "type": "request",
                 "command": "threads"
             }

D+00059.813: /handling #170 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 173,
                 "type": "request",
                 "command": "threads"
             }

D+00059.813: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 466,
                 "type": "response",
                 "request_seq": 173,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00059.813: /handling #170 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 234,
                 "type": "response",
                 "request_seq": 170,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00059.813: Client[1] --> {
                 "seq": 171,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00059.813: /handling #171 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 174,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00059.813: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 468,
                 "type": "response",
                 "request_seq": 174,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 160,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00059.813: /handling #171 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 235,
                 "type": "response",
                 "request_seq": 171,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 160,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00059.828: Client[1] --> {
                 "seq": 172,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00059.828: /handling #172 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 175,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00059.828: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 470,
                 "type": "response",
                 "request_seq": 175,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00059.828: /handling #172 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 236,
                 "type": "response",
                 "request_seq": 172,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00059.828: Client[1] --> {
                 "seq": 173,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00059.828: /handling #173 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 176,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00059.828: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 472,
                 "type": "response",
                 "request_seq": 176,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 27
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 99
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00059.828: /handling #173 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 237,
                 "type": "response",
                 "request_seq": 173,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 27
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 99
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00059.828: Client[1] --> {
                 "seq": 174,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00059.828: /handling #174 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 177,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00059.828: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 474,
                 "type": "response",
                 "request_seq": 177,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 101
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 102
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00059.828: /handling #174 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 238,
                 "type": "response",
                 "request_seq": 174,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 101
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 102
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00060.250: Client[1] --> {
                 "seq": 175,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00060.250: /handling #175 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 178,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00060.250: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 476,
                 "type": "response",
                 "request_seq": 178,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00060.250: /handling #175 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 239,
                 "type": "response",
                 "request_seq": 175,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00061.719: Client[1] --> {
                 "seq": 176,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00061.719: /handling #176 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 179,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00061.719: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 478,
                 "type": "response",
                 "request_seq": 179,
                 "success": true,
                 "command": "next"
             }

D+00061.719: /handling #176 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 240,
                 "type": "response",
                 "request_seq": 176,
                 "success": true,
                 "command": "next"
             }

D+00061.719: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 480,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00061.719: /handling #480 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 241,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00061.719: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 482,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00061.719: /handling #482 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 242,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00061.719: Client[1] --> {
                 "seq": 177,
                 "type": "request",
                 "command": "threads"
             }

D+00061.719: /handling #177 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 180,
                 "type": "request",
                 "command": "threads"
             }

D+00061.719: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 484,
                 "type": "response",
                 "request_seq": 180,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00061.719: /handling #177 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 243,
                 "type": "response",
                 "request_seq": 177,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00061.719: Client[1] --> {
                 "seq": 178,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00061.719: /handling #178 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 181,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00061.719: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 486,
                 "type": "response",
                 "request_seq": 181,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 161,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00061.719: /handling #178 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 244,
                 "type": "response",
                 "request_seq": 178,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 161,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00061.734: Client[1] --> {
                 "seq": 179,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00061.734: /handling #179 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 182,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00061.734: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 488,
                 "type": "response",
                 "request_seq": 182,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00061.734: /handling #179 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 245,
                 "type": "response",
                 "request_seq": 179,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00061.734: Client[1] --> {
                 "seq": 180,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00061.734: /handling #180 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 183,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00061.734: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 490,
                 "type": "response",
                 "request_seq": 183,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 103
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 104
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00061.734: /handling #180 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 246,
                 "type": "response",
                 "request_seq": 180,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 103
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 104
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00061.734: Client[1] --> {
                 "seq": 181,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00061.734: /handling #181 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 184,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00061.734: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 492,
                 "type": "response",
                 "request_seq": 184,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 106
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 107
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00061.734: /handling #181 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 247,
                 "type": "response",
                 "request_seq": 181,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 106
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 107
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00062.141: Client[1] --> {
                 "seq": 182,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00062.141: /handling #182 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 185,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00062.141: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 494,
                 "type": "response",
                 "request_seq": 185,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00062.141: /handling #182 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 248,
                 "type": "response",
                 "request_seq": 182,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00062.375: Client[1] --> {
                 "seq": 183,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00062.375: /handling #183 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 186,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00062.375: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 496,
                 "type": "response",
                 "request_seq": 186,
                 "success": true,
                 "command": "next"
             }

D+00062.375: /handling #183 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 249,
                 "type": "response",
                 "request_seq": 183,
                 "success": true,
                 "command": "next"
             }

D+00062.375: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 498,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00062.375: /handling #498 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 250,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00062.375: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 500,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00062.375: /handling #500 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 251,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00062.391: Client[1] --> {
                 "seq": 184,
                 "type": "request",
                 "command": "threads"
             }

D+00062.391: /handling #184 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 187,
                 "type": "request",
                 "command": "threads"
             }

D+00062.391: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 502,
                 "type": "response",
                 "request_seq": 187,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00062.391: /handling #184 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 252,
                 "type": "response",
                 "request_seq": 184,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00062.391: Client[1] --> {
                 "seq": 185,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00062.391: /handling #185 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 188,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00062.391: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 504,
                 "type": "response",
                 "request_seq": 188,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 163,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00062.391: /handling #185 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 253,
                 "type": "response",
                 "request_seq": 185,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 163,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00062.391: Client[1] --> {
                 "seq": 186,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00062.391: /handling #186 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 189,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00062.391: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 506,
                 "type": "response",
                 "request_seq": 189,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00062.391: /handling #186 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 254,
                 "type": "response",
                 "request_seq": 186,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00062.391: Client[1] --> {
                 "seq": 187,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00062.391: /handling #187 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 190,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00062.391: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 508,
                 "type": "response",
                 "request_seq": 190,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 108
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 109
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00062.391: /handling #187 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 255,
                 "type": "response",
                 "request_seq": 187,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 108
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 109
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00062.391: Client[1] --> {
                 "seq": 188,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00062.391: /handling #188 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 191,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00062.391: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 510,
                 "type": "response",
                 "request_seq": 191,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 110
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 111
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00062.391: /handling #188 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 256,
                 "type": "response",
                 "request_seq": 188,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 110
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 111
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00062.813: Client[1] --> {
                 "seq": 189,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00062.813: /handling #189 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 192,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00062.813: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 512,
                 "type": "response",
                 "request_seq": 192,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00062.813: /handling #189 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 257,
                 "type": "response",
                 "request_seq": 189,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00119.234: Client[1] --> {
                 "seq": 190,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00119.234: /handling #190 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 193,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00119.234: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 514,
                 "type": "response",
                 "request_seq": 193,
                 "success": true,
                 "command": "next"
             }

D+00119.234: /handling #190 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 258,
                 "type": "response",
                 "request_seq": 190,
                 "success": true,
                 "command": "next"
             }

D+00119.234: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 516,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00119.250: /handling #516 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 259,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00119.250: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 518,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00119.250: /handling #518 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 260,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00119.250: Client[1] --> {
                 "seq": 191,
                 "type": "request",
                 "command": "threads"
             }

D+00119.250: /handling #191 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 194,
                 "type": "request",
                 "command": "threads"
             }

D+00119.250: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 520,
                 "type": "response",
                 "request_seq": 194,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00119.250: /handling #191 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 261,
                 "type": "response",
                 "request_seq": 191,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00119.250: Client[1] --> {
                 "seq": 192,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00119.250: /handling #192 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 195,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00119.250: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 522,
                 "type": "response",
                 "request_seq": 195,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 165,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00119.250: /handling #192 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 262,
                 "type": "response",
                 "request_seq": 192,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 165,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00119.266: Client[1] --> {
                 "seq": 193,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00119.266: /handling #193 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 196,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00119.266: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 524,
                 "type": "response",
                 "request_seq": 196,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00119.266: /handling #193 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 263,
                 "type": "response",
                 "request_seq": 193,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00119.266: Client[1] --> {
                 "seq": 194,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00119.266: /handling #194 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 197,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00119.266: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 526,
                 "type": "response",
                 "request_seq": 197,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 112
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 113
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00119.266: /handling #194 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 264,
                 "type": "response",
                 "request_seq": 194,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 112
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 113
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00119.266: Client[1] --> {
                 "seq": 195,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00119.266: /handling #195 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 198,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00119.266: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 528,
                 "type": "response",
                 "request_seq": 198,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 114
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 104
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00119.266: /handling #195 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 265,
                 "type": "response",
                 "request_seq": 195,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 114
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 104
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00119.672: Client[1] --> {
                 "seq": 196,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00119.672: /handling #196 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 199,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00119.688: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 530,
                 "type": "response",
                 "request_seq": 199,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00119.688: /handling #196 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 266,
                 "type": "response",
                 "request_seq": 196,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00123.109: Client[1] --> {
                 "seq": 197,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00123.109: /handling #197 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 200,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00123.109: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 532,
                 "type": "response",
                 "request_seq": 200,
                 "success": true,
                 "command": "next"
             }

D+00123.109: /handling #197 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 267,
                 "type": "response",
                 "request_seq": 197,
                 "success": true,
                 "command": "next"
             }

D+00123.109: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 534,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00123.109: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 536,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00123.109: /handling #534 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 268,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00123.109: /handling #536 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 269,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00123.109: Client[1] --> {
                 "seq": 198,
                 "type": "request",
                 "command": "threads"
             }

D+00123.109: /handling #198 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 201,
                 "type": "request",
                 "command": "threads"
             }

D+00123.109: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 538,
                 "type": "response",
                 "request_seq": 201,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00123.109: /handling #198 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 270,
                 "type": "response",
                 "request_seq": 198,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00123.109: Client[1] --> {
                 "seq": 199,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00123.109: /handling #199 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 202,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00123.109: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 540,
                 "type": "response",
                 "request_seq": 202,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 166,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00123.109: /handling #199 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 271,
                 "type": "response",
                 "request_seq": 199,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 166,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00123.125: Client[1] --> {
                 "seq": 200,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00123.125: /handling #200 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 203,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00123.125: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 542,
                 "type": "response",
                 "request_seq": 203,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00123.125: /handling #200 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 272,
                 "type": "response",
                 "request_seq": 200,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00123.125: Client[1] --> {
                 "seq": 201,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00123.125: /handling #201 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 204,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00123.125: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 544,
                 "type": "response",
                 "request_seq": 204,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 115
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 116
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00123.125: /handling #201 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 273,
                 "type": "response",
                 "request_seq": 201,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 115
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 116
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00123.125: Client[1] --> {
                 "seq": 202,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00123.125: /handling #202 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 205,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00123.125: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 546,
                 "type": "response",
                 "request_seq": 205,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 117
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 118
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00123.125: /handling #202 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 274,
                 "type": "response",
                 "request_seq": 202,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 117
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 118
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00123.547: Client[1] --> {
                 "seq": 203,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00123.547: /handling #203 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 206,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00123.547: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 548,
                 "type": "response",
                 "request_seq": 206,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00123.547: /handling #203 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 275,
                 "type": "response",
                 "request_seq": 203,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00124.875: Client[1] --> {
                 "seq": 204,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00124.875: /handling #204 request "next" from Client[1]/
             Server[1] <-- {
                 "seq": 207,
                 "type": "request",
                 "command": "next",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00124.875: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 550,
                 "type": "response",
                 "request_seq": 207,
                 "success": true,
                 "command": "next"
             }

D+00124.875: /handling #204 request "next" from Client[1]/
             Client[1] <-- {
                 "seq": 276,
                 "type": "response",
                 "request_seq": 204,
                 "success": true,
                 "command": "next"
             }

D+00124.875: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 552,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00124.875: /handling #552 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 277,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00124.875: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 554,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00124.875: /handling #554 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 278,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "step",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00124.875: Client[1] --> {
                 "seq": 205,
                 "type": "request",
                 "command": "threads"
             }

D+00124.875: /handling #205 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 208,
                 "type": "request",
                 "command": "threads"
             }

D+00124.875: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 556,
                 "type": "response",
                 "request_seq": 208,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00124.875: /handling #205 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 279,
                 "type": "response",
                 "request_seq": 205,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00124.875: Client[1] --> {
                 "seq": 206,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00124.875: /handling #206 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 209,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00124.875: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 558,
                 "type": "response",
                 "request_seq": 209,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 167,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00124.875: /handling #206 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 280,
                 "type": "response",
                 "request_seq": 206,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 167,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00124.891: Client[1] --> {
                 "seq": 207,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00124.891: /handling #207 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 210,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 2
                 }
             }

D+00124.891: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 560,
                 "type": "response",
                 "request_seq": 210,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00124.891: /handling #207 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 281,
                 "type": "response",
                 "request_seq": 207,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 4,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 5,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00124.891: Client[1] --> {
                 "seq": 208,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00124.891: /handling #208 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 211,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 4
                 }
             }

D+00124.891: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 562,
                 "type": "response",
                 "request_seq": 211,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 119
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 120
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00124.891: /handling #208 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 282,
                 "type": "response",
                 "request_seq": 208,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 119
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 120
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00124.891: Client[1] --> {
                 "seq": 209,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00124.891: /handling #209 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 212,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 5
                 }
             }

D+00124.891: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 564,
                 "type": "response",
                 "request_seq": 212,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 121
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 92
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00124.891: /handling #209 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 283,
                 "type": "response",
                 "request_seq": 209,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 121
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 92
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00125.297: Client[1] --> {
                 "seq": 210,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00125.297: /handling #210 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 213,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00125.313: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 566,
                 "type": "response",
                 "request_seq": 213,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00125.313: /handling #210 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 284,
                 "type": "response",
                 "request_seq": 210,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 2
                 }
             }

D+00135.563: Client[1] --> {
                 "seq": 211,
                 "type": "request",
                 "command": "continue",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00135.563: /handling #211 request "continue" from Client[1]/
             Server[1] <-- {
                 "seq": 214,
                 "type": "request",
                 "command": "continue",
                 "arguments": {
                     "threadId": "*"
                 }
             }

D+00135.563: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 568,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00135.563: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 570,
                 "type": "response",
                 "request_seq": 214,
                 "success": true,
                 "command": "continue",
                 "body": {
                     "allThreadsContinued": true
                 }
             }

D+00135.563: /handling #211 request "continue" from Client[1]/
             Client[1] <-- {
                 "seq": 285,
                 "type": "response",
                 "request_seq": 211,
                 "success": true,
                 "command": "continue",
                 "body": {
                     "allThreadsContinued": true
                 }
             }

D+00135.563: Server[1] --> {
                 "pydevd_cmd_id": 157,
                 "seq": 572,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00135.563: /handling #568 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 286,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00135.563: /handling #572 event "stopped" from Server[1]/
             Client[1] <-- {
                 "seq": 287,
                 "type": "event",
                 "event": "stopped",
                 "body": {
                     "reason": "breakpoint",
                     "threadId": 1,
                     "preserveFocusHint": false,
                     "allThreadsStopped": true
                 }
             }

D+00135.578: Client[1] --> {
                 "seq": 212,
                 "type": "request",
                 "command": "threads"
             }

D+00135.578: /handling #212 request "threads" from Client[1]/
             Server[1] <-- {
                 "seq": 215,
                 "type": "request",
                 "command": "threads"
             }

D+00135.578: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 574,
                 "type": "response",
                 "request_seq": 215,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00135.578: /handling #212 request "threads" from Client[1]/
             Client[1] <-- {
                 "seq": 288,
                 "type": "response",
                 "request_seq": 212,
                 "success": true,
                 "command": "threads",
                 "body": {
                     "threads": [
                         {
                             "id": 1,
                             "name": "MainThread"
                         }
                     ]
                 }
             }

D+00135.578: Client[1] --> {
                 "seq": 213,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00135.578: /handling #213 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 216,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 0,
                     "levels": 1
                 }
             }

D+00135.578: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 576,
                 "type": "response",
                 "request_seq": 216,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 122,
                             "name": "_run_ai_test",
                             "line": 17,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 3
                 }
             }

D+00135.578: /handling #213 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 289,
                 "type": "response",
                 "request_seq": 213,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 122,
                             "name": "_run_ai_test",
                             "line": 17,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 3
                 }
             }

D+00135.594: Client[1] --> {
                 "seq": 214,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 122
                 }
             }

D+00135.594: /handling #214 request "scopes" from Client[1]/
             Server[1] <-- {
                 "seq": 217,
                 "type": "request",
                 "command": "scopes",
                 "arguments": {
                     "frameId": 122
                 }
             }

D+00135.594: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 578,
                 "type": "response",
                 "request_seq": 217,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 123,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 124,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00135.594: /handling #214 request "scopes" from Client[1]/
             Client[1] <-- {
                 "seq": 290,
                 "type": "response",
                 "request_seq": 214,
                 "success": true,
                 "command": "scopes",
                 "body": {
                     "scopes": [
                         {
                             "name": "Locals",
                             "variablesReference": 123,
                             "expensive": false,
                             "presentationHint": "locals",
                             "source": {}
                         },
                         {
                             "name": "Globals",
                             "variablesReference": 124,
                             "expensive": false,
                             "source": {}
                         }
                     ]
                 }
             }

D+00135.594: Client[1] --> {
                 "seq": 215,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 123
                 }
             }

D+00135.594: /handling #215 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 218,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 123
                 }
             }

D+00135.594: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 580,
                 "type": "response",
                 "request_seq": 218,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "option",
                             "value": "1",
                             "type": "int",
                             "evaluateName": "option",
                             "variablesReference": 0
                         }
                     ]
                 }
             }

D+00135.594: /handling #215 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 291,
                 "type": "response",
                 "request_seq": 215,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "option",
                             "value": "1",
                             "type": "int",
                             "evaluateName": "option",
                             "variablesReference": 0
                         }
                     ]
                 }
             }

D+00135.594: Client[1] --> {
                 "seq": 216,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 124
                 }
             }

D+00135.594: /handling #216 request "variables" from Client[1]/
             Server[1] <-- {
                 "seq": 219,
                 "type": "request",
                 "command": "variables",
                 "arguments": {
                     "variablesReference": 124
                 }
             }

D+00135.594: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 582,
                 "type": "response",
                 "request_seq": 219,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 91
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 125
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00135.594: /handling #216 request "variables" from Client[1]/
             Client[1] <-- {
                 "seq": 292,
                 "type": "response",
                 "request_seq": 216,
                 "success": true,
                 "command": "variables",
                 "body": {
                     "variables": [
                         {
                             "name": "special variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "special variables",
                             "variablesReference": 91
                         },
                         {
                             "name": "function variables",
                             "value": "",
                             "type": "",
                             "evaluateName": "function variables",
                             "variablesReference": 125
                         },
                         {
                             "name": "(return) ArgumentParser.__init__",
                             "value": "None",
                             "type": "NoneType",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.__init__']",
                             "variablesReference": 0,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.add_argument",
                             "value": "_StoreAction(option_strings=['-ui'], dest='ui', nargs=None, const=None, default=None, type=<class 'int'>, choices=[1, 2, 3], required=False, help='Run UI test variant (1..3) and pass the number to _run_ui_test()', metavar=None)",
                             "type": "_StoreAction",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.add_argument']",
                             "variablesReference": 96,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "(return) ArgumentParser.parse_args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "__pydevd_ret_val_dict['ArgumentParser.parse_args']",
                             "variablesReference": 100,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "Optional",
                             "value": "typing.Optional",
                             "type": "_SpecialForm",
                             "evaluateName": "Optional",
                             "variablesReference": 8
                         },
                         {
                             "name": "argparse",
                             "value": "<module 'argparse' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\argparse.py'>",
                             "type": "module",
                             "evaluateName": "argparse",
                             "variablesReference": 9
                         },
                         {
                             "name": "args",
                             "value": "Namespace(db=None, ai=1, ui=None)",
                             "type": "Namespace",
                             "evaluateName": "args",
                             "variablesReference": 100
                         },
                         {
                             "name": "exit_code",
                             "value": "0",
                             "type": "int",
                             "evaluateName": "exit_code",
                             "variablesReference": 0
                         },
                         {
                             "name": "logging",
                             "value": "<module 'logging' from 'C:\\\\Users\\\\Me\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python312\\\\Lib\\\\logging\\\\__init__.py'>",
                             "type": "module",
                             "evaluateName": "logging",
                             "variablesReference": 10
                         },
                         {
                             "name": "parser",
                             "value": "ArgumentParser(prog='main.py', usage=None, description='Smart Elective Advisor CLI', formatter_class=<class 'argparse.HelpFormatter'>, conflict_handler='error', add_help=True)",
                             "type": "ArgumentParser",
                             "evaluateName": "parser",
                             "variablesReference": 30
                         },
                         {
                             "name": "(return) setup_logger",
                             "value": "<Logger utilities.logger_setup (INFO)>",
                             "type": "Logger",
                             "evaluateName": "__pydevd_ret_val_dict['setup_logger']",
                             "variablesReference": 105,
                             "presentationHint": {
                                 "attributes": [
                                     "readOnly"
                                 ]
                             }
                         },
                         {
                             "name": "sys",
                             "value": "<module 'sys' (built-in)>",
                             "type": "module",
                             "evaluateName": "sys",
                             "variablesReference": 11
                         },
                         {
                             "name": "_run_ai_test",
                             "value": "<function _run_ai_test at 0x00000200B94C6D40>",
                             "type": "function",
                             "evaluateName": "_run_ai_test",
                             "variablesReference": 13
                         },
                         {
                             "name": "_run_db_test",
                             "value": "<function _run_db_test at 0x00000200B93F56C0>",
                             "type": "function",
                             "evaluateName": "_run_db_test",
                             "variablesReference": 14
                         },
                         {
                             "name": "_run_ui",
                             "value": "<function _run_ui at 0x00000200B94D4220>",
                             "type": "function",
                             "evaluateName": "_run_ui",
                             "variablesReference": 15
                         }
                     ]
                 }
             }

D+00136.016: Client[1] --> {
                 "seq": 217,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00136.016: /handling #217 request "stackTrace" from Client[1]/
             Server[1] <-- {
                 "seq": 220,
                 "type": "request",
                 "command": "stackTrace",
                 "arguments": {
                     "threadId": 1,
                     "startFrame": 1,
                     "levels": 19
                 }
             }

D+00136.016: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 584,
                 "type": "response",
                 "request_seq": 220,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 167,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         },
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 3
                 }
             }

D+00136.016: /handling #217 request "stackTrace" from Client[1]/
             Client[1] <-- {
                 "seq": 293,
                 "type": "response",
                 "request_seq": 217,
                 "success": true,
                 "command": "stackTrace",
                 "body": {
                     "stackFrames": [
                         {
                             "id": 2,
                             "name": "<module>",
                             "line": 167,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\main.py",
                                 "sourceReference": 0
                             }
                         },
                         {
                             "id": 3,
                             "name": "<module>",
                             "line": 22,
                             "column": 1,
                             "source": {
                                 "path": "C:\\Users\\Me\\Documents\\Python\\CPSC491\\Projects\\class_elective_advisor_491\\run_debug.py",
                                 "sourceReference": 0
                             }
                         }
                     ],
                     "totalFrames": 3
                 }
             }

D+00146.172: Client[1] --> {
                 "seq": 218,
                 "type": "request",
                 "command": "continue",
                 "arguments": {
                     "threadId": 1
                 }
             }

D+00146.172: /handling #218 request "continue" from Client[1]/
             Server[1] <-- {
                 "seq": 221,
                 "type": "request",
                 "command": "continue",
                 "arguments": {
                     "threadId": "*"
                 }
             }

D+00146.172: Server[1] --> {
                 "pydevd_cmd_id": 158,
                 "seq": 586,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00146.172: Server[1] --> {
                 "pydevd_cmd_id": 502,
                 "seq": 588,
                 "type": "response",
                 "request_seq": 221,
                 "success": true,
                 "command": "continue",
                 "body": {
                     "allThreadsContinued": true
                 }
             }

D+00146.172: /handling #218 request "continue" from Client[1]/
             Client[1] <-- {
                 "seq": 294,
                 "type": "response",
                 "request_seq": 218,
                 "success": true,
                 "command": "continue",
                 "body": {
                     "allThreadsContinued": true
                 }
             }

D+00146.172: /handling #586 event "continued" from Server[1]/
             Client[1] <-- {
                 "seq": 295,
                 "type": "event",
                 "event": "continued",
                 "body": {
                     "threadId": 1,
                     "allThreadsContinued": true
                 }
             }

D+00146.172: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 590,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,886 INFO __main__:21 Running AI test...\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.172: /handling #590 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 296,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,886 INFO __main__:21 Running AI test...\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.172: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 592,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,886 INFO ai_integration.ai_module:37 Running AI module test...\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.172: /handling #592 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 297,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,886 INFO ai_integration.ai_module:37 Running AI module test...\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.188: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 594,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,900 INFO utilities.load_env:34 Loading environment variables.\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.188: /handling #594 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 298,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,900 INFO utilities.load_env:34 Loading environment variables.\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.188: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 596,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,902 INFO utilities.load_env:52 API Key loaded successfully.\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.188: /handling #596 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 299,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,902 INFO utilities.load_env:52 API Key loaded successfully.\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.188: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 598,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,902 INFO ai_integration.ai_module:55 main_test_ai option 1: OPENAI_API_KEY present.\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.188: /handling #598 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 300,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,902 INFO ai_integration.ai_module:55 main_test_ai option 1: OPENAI_API_KEY present.\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.188: Server[1] --> {
                 "pydevd_cmd_id": 116,
                 "seq": 600,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,902 INFO __main__:24 AI test passed.\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.188: /handling #600 event "output" from Server[1]/
             Client[1] <-- {
                 "seq": 301,
                 "type": "event",
                 "event": "output",
                 "body": {
                     "output": "2025-08-31 23:22:05,902 INFO __main__:24 AI test passed.\n",
                     "category": "stderr",
                     "source": {}
                 }
             }

D+00146.281: Server[1] --> {
                 "pydevd_cmd_id": 104,
                 "seq": 602,
                 "type": "event",
                 "event": "thread",
                 "body": {
                     "reason": "exited",
                     "threadId": 1
                 }
             }

D+00146.281: /handling #602 event "thread" from Server[1]/
             Client[1] <-- {
                 "seq": 302,
                 "type": "event",
                 "event": "thread",
                 "body": {
                     "reason": "exited",
                     "threadId": 1
                 }
             }

D+00146.281: Server[1] --> {
                 "pydevd_cmd_id": 129,
                 "seq": 604,
                 "type": "event",
                 "event": "terminated",
                 "body": {}
             }

D+00146.281: /handling #604 event "terminated" from Server[1]/
             Closing Server[1] message stream

D+00146.281: Exiting message loop for channel Server[1]: [WinError 10038] An operation was attempted on something that is not a socket

I+00146.281: /handling disconnect from Server[1]/
             Server[1] has disconnected; finalizing Session[1].

D+00146.281: /handling disconnect from Server[1]/
             Client[1] <-- {
                 "seq": 303,
                 "type": "event",
                 "event": "terminated"
             }

I+00146.281: /handling disconnect from Server[1]/
             Session[1] finalized.

I+00146.281: All debug servers disconnected; waiting for remaining sessions...

D+00146.281: Client[1] --> {
                 "seq": 219,
                 "type": "request",
                 "command": "disconnect",
                 "arguments": {
                     "restart": false
                 }
             }

D+00146.281: /handling #219 request "disconnect" from Client[1]/
             Client[1] <-- {
                 "seq": 304,
                 "type": "response",
                 "request_seq": 219,
                 "success": true,
                 "command": "disconnect"
             }

D+00146.281: /handling #219 request "disconnect" from Client[1]/
             Closing Client[1] message stream

D+00146.281: Exiting message loop for channel Client[1]: [WinError 10038] An operation was attempted on something that is not a socket

I+00146.281: /handling disconnect from Client[1]/
             Session[1] has ended.

I+00146.281: All debug sessions have ended; exiting.

I+00146.281: Not logging to "<stderr>" anymore.

