name: Write version files on semantic tag push

on:
  push:
    tags:
      - 'v*'  # run only for tags starting with v

permissions:
  contents: write

jobs:
  write-version-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Capture metadata
        id: meta
        shell: bash
        run: |
          TAG="${GITHUB_REF_NAME}"
          SHA_SHORT="$(git rev-parse --short=7 "$GITHUB_SHA")"
          DATE_UTC="$(date -u +'%Y-%m-%d')"
          ISO_UTC="$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          DEFAULT_BRANCH="${{ github.event.repository.default_branch }}"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"
          echo "sha=$SHA_SHORT" >> "$GITHUB_OUTPUT"
          echo "date=$DATE_UTC" >> "$GITHUB_OUTPUT"
          echo "iso=$ISO_UTC" >> "$GITHUB_OUTPUT"
          echo "default_branch=$DEFAULT_BRANCH" >> "$GITHUB_OUTPUT"

      - name: Check if tag commit is on default branch
        id: check
        shell: bash
        run: |
          git fetch origin "${{ steps.meta.outputs.default_branch }}" --depth=1
          if git branch --remotes --contains "$GITHUB_SHA" | grep -q "origin/${{ steps.meta.outputs.default_branch }}"; then
            echo "on_default=true" >> "$GITHUB_OUTPUT"
          else
            echo "on_default=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Stop if not on default branch
        if: steps.check.outputs.on_default == 'false'
        run: echo "Tag commit is not on ${{ steps.meta.outputs.default_branch }}. Skipping commit."

      - name: Switch to default branch working tree
        if: steps.check.outputs.on_default == 'true'
        run: |
          git checkout "${{ steps.meta.outputs.default_branch }}"
          git pull --ff-only origin "${{ steps.meta.outputs.default_branch }}"

      - name: Write version.txt and version.json
        if: steps.check.outputs.on_default == 'true'
        shell: bash
        run: |
          echo "${{ steps.meta.outputs.tag }} (${{ steps.meta.outputs.sha }}, ${{ steps.meta.outputs.date }})" > version.txt

          printf '{\n'                                  >  version.json
          printf '  "version": "%s",\n'   "${{ steps.meta.outputs.tag }}" >> version.json
          printf '  "commit": "%s",\n'    "${{ steps.meta.outputs.sha }}" >> version.json
          printf '  "date": "%s",\n'      "${{ steps.meta.outputs.date }}" >> version.json
          printf '  "datetime": "%s",\n'  "${{ steps.meta.outputs.iso }}" >> version.json
          printf '  "defaultBranch": "%s"\n' "${{ steps.meta.outputs.default_branch }}" >> version.json
          printf '}\n' >> version.json

      - name: Commit and push if changed
        if: steps.check.outputs.on_default == 'true'
        shell: bash
        run: |
          if ! git diff --quiet -- version.txt version.json; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add version.txt version.json
            git commit -m "chore: version files for ${{ steps.meta.outputs.tag }} (${{ steps.meta.outputs.sha }}, ${{ steps.meta.outputs.date }})"
            git push origin "${{ steps.meta.outputs.default_branch }}"
          else
            echo "No changes to version files; nothing to commit."
          fi